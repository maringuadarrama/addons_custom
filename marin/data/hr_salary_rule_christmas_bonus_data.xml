<?xml version="1.0" encoding="UTF-8" ?>
<odoo noupdate="1">
    <!-- Perceptions -->
    <record id="hr_salary_rule_perception_002_e_601_ff" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo (E)</field>
        <field name="code">PE002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.l10n_mx_edi_daily_wage) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')

if 1 > seniority['years']:
    bonus_total = (bonus_total / 365) * seniority['days']

# Minimum wage set with values of SAT http://www.sat.gob.mx/informacion_fiscal/tablas_indicadores/Documents/salarios_minimos_historico.xls

uma = contract.company_id.l10n_mx_edi_uma
amount_exempt = uma * 30

diff =  bonus_total - amount_exempt

result = bonus_total
if diff >= 0:
    result =  amount_exempt</field>
        <field name="note">Sólo 30 días de SM queda exento, el excedente es gravado</field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_002_g_601_ff" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo (G)</field>
        <field name="code">PG002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.l10n_mx_edi_daily_wage) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')

if 1 > seniority['years']:
    bonus_total = (bonus_total /365) * seniority['days']

# Minimum wage set with values of SAT http://www.sat.gob.mx/informacion_fiscal/tablas_indicadores/Documents/salarios_minimos_historico.xls

uma = contract.company_id.l10n_mx_edi_uma
amount_exempt = uma * 30

diff =  bonus_total - amount_exempt
result = 0
if diff > 0:
    result =  diff</field>
        <field name="note">Sólo 30 días de SM queda exento, el excedente es gravado</field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_021_e_christmas_601_ff" model="hr.salary.rule">
        <field name="name">Prima vacacional (E)</field>
        <field name="code">PE021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus_type = (payslip.company_id or contract.company_id).l10n_mx_edi_vacation_bonus
result = 0
holidays = contract._get_vacation_days(date_to=payslip.date_to) if vacation_bonus_type == 'on_christmas_bonus' else False
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * (holidays * (contract.l10n_mx_edi_vacation_bonus / 100))
    result = uma * 15 if result >= (uma * 15) else result
        </field>
        <field name="note">Sólo 15 UMA son exentos, el excedente es gravado</field>
        <field name="sequence" eval="21000" />
    </record>

    <record id="hr_salary_rule_perception_021_g_christmas_601_ff" model="hr.salary.rule">
        <field name="name">Prima vacacional (G)</field>
        <field name="code">PG021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus_type = (payslip.company_id or contract.company_id).l10n_mx_edi_vacation_bonus
result = 0
holidays = contract._get_vacation_days(date_to=payslip.date_to) if vacation_bonus_type == 'on_christmas_bonus' else 0
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * (holidays * (contract.l10n_mx_edi_vacation_bonus / 100))
    result = result - (uma * 15) if result >= (uma * 15) else 0
        </field>
        <field name="note">Sólo 15 UMA son exentos, el excedente es gravado</field>
        <field name="sequence" eval="21000" />
    </record>

    <record id="hr_salary_rule_other_payment_aux_02_601_ff" model="hr.salary.rule">
        <field name="name">Auxiliar Subsidio para el empleo</field>
        <field name="code">AUX_OP002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Based on http://www.sat.gob.mx/informacion_fiscal/devoluciones_compensaciones/Paginas/subsidio_al_empleo.aspx
# TODO - Complete tables
income_period = categories['PERGRA']
table = {
    '05': [
        (0.01, 1768.96, 407.02),
        (1768.97, 2653.38, 406.83),
        (2653.39, 3472.84, 406.62),
        (3472.85, 3537.87, 392.77),
        (3537.88, 4446.15, 382.46),
        (4446.16, 4717.18, 354.23),
        (4717.19, 5335.42, 324.87),
        (5335.43, 6224.67, 294.63),
        (6224.68, 7113.90, 253.54),
        (7113.91, 7382.33, 217.61),
        (7382.34, 99999999.00, 0)],
    '04': [
        (0.01, 872.85, 200.85),
        (872.86, 1309.20, 200.70),
        (1309.21, 1713.60, 200.70),
        (1713.61, 1745.70, 193.80),
        (1745.71, 2193.75, 188.70),
        (2193.76, 2327.55, 174.75),
        (2327.56, 2632.65, 160.35),
        (2632.66, 3071.40, 145.35),
        (3071.41, 3510.15, 125.10),
        (3510.16, 3642.60, 107.40),
        (3642.61, 99999999.00, 0)],
}
result = 0.00
table = table.get(contract.l10n_mx_edi_schedule_pay_id.code, [])
if table:
    for value in table:
        if income_period >=value[0] and value[1] >= income_period:
            result = value[2]
            break</field>
        <field name="sequence" eval="53501" />
    </record>

    <record id="hr_salary_rule_deduction_aguinaldo_002_601_ff" model="hr.salary.rule">
        <field name="name">ISR - Aguinaldo</field>
        <field name="code">002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Basado en la ley 174 de ISR
table = [(0.01, 746.04, 0.00, 0.0192), (746.05, 6332.05, 14.32, 0.0640),
         (6332.06, 11128.01, 371.83, 0.1088), (11128.02, 12935.82, 893.63, 0.1600),
         (12935.83, 15487.71, 1182.88, 0.1792), (15487.72, 31236.49, 1640.18, 0.2136),
         (31236.50, 49233.00, 5004.12, 0.2352), (49233.01, 93993.90, 9236.89, 0.3000),
         (93993.91, 125325.20, 22665.17, 0.3200), (125325.21, 375975.61, 32691.18, 0.3400),
         (375975.62, 999999999, 117912.32, 0.3500)]
income_period = categories['PERGRA']
income_exe = categories.PEREXE
wage = contract.wage

year = payslip.l10n_mx_edi_payment_date.year
days_year = 365
if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    days_year = 366

art_174_lisr = income_period / days_year * 30.4
base_gravable = art_174_lisr + wage

result1 = result2 = 0

for value in table:
   if base_gravable >=value[0] and value[1] >= base_gravable:
       result1 = (((base_gravable - value[0]) * value[3]) + value[2]) * -1

for value in table:
   if wage >=value[0] and value[1] >= wage:
       result2 = (((wage - value[0]) * value[3]) + value[2]) * -1

isr = result2 - result1
efective_rate = isr / (art_174_lisr or 1)
result = (income_period * efective_rate)
        </field>
        <field name="sequence" eval="55100" />
    </record>

    <record id="hr_salary_rule_deduction_071_02_601_ff" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">ASEE</field>
        <field name="l10n_mx_edi_code">071</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.asee and inputs.asee.amount or 0.0</field>
        <field name="sequence" eval="81700" />
    </record>

    <record id="hr_payslip_input_type_deduction_071_02_601_ff" model="hr.payslip.input.type">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">asee</field>
        <field name="country_id" ref="base.mx" />
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_aguinaldo_601_ff')])]" />
    </record>

    <record id="hr_salary_rule_other_payment_002_02_601_ff" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">OP002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = employee.l10n_mx_edi_contract_regime_type == '02'</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0.0
        </field>
        <field name="sequence" eval="87000" />
    </record>

    <record id="hr_salary_rule_deduction_007_a02_601_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">A02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony:
    alimony = alimony[0]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <record id="hr_salary_rule_deduction_007_b02_601_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">B02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 1:
    alimony = alimony[1]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <record id="hr_salary_rule_deduction_007_c02_601_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">C02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 2:
    alimony = alimony[2]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <!-- Sueldo Neto -->
    <record id="hr_salary_rule_total_excempt_02_601_ff" model="hr.salary.rule">
        <field name="name">Total Exento</field>
        <field name="code">Exento</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PEREXE</field>
        <field name="sequence" eval="999996" />
    </record>

    <record id="hr_salary_rule_total_taxed_02_601_ff" model="hr.salary.rule">
        <field name="name">Total Gravado</field>
        <field name="code">Gravado</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PERGRA</field>
        <field name="sequence" eval="999997" />
    </record>

    <record id="hr_salary_rule_total_deductions_02_601_ff" model="hr.salary.rule">
        <field name="name">Total Deducciones</field>
        <field name="code">Deducciones</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.DED</field>
        <field name="sequence" eval="999998" />
    </record>

    <record id="hr_salary_rule_total_other_02_601_ff" model="hr.salary.rule">
        <field name="name">Total Otros Pagos</field>
        <field name="code">OtrosPagos</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.OTHER</field>
        <field name="sequence" eval="999999" />
    </record>

    <record id="hr_salary_rule_net_salary_02_601_ff" model="hr.salary.rule">
        <field name="name">Net Salary</field>
        <field name="code">NET</field>
        <field name="category_id" ref="hr_payroll.NET" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories.PERGRA - categories.DED + categories.PEREXE + categories.OTHER</field>
        <field name="sequence" eval="1000000" />
    </record>

    <record id="hr_salary_rule_isn_christmas_601_ff" model="hr.salary.rule">
        <field name="name">ISN - Aguinaldo</field>
        <field name="code">ISN</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="note"
        >Gravado multiplicado por el porcentaje de ISN del estado de la dirección de trabajo y agregado a Company Contribution</field>
        <field name="amount_python_compute">
result = (categories.PERGRA + categories.PEREXE) * employee.get_isn_percentage()
        </field>
        <field name="sequence" eval="1000005" />
    </record>

    <record id="hr_salary_rule_isn_university_christmas_601_ff" model="hr.salary.rule">
        <field name="name">Aportación a Universidad Autónoma</field>
        <field name="code">AUA</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_601_ff" />
        <field name="condition_select">python</field>
        <field name="condition_python">
# Now only supported for Zacatecas
result = employee.address_id.state_id == employee.env.ref('base.state_mx_zac')
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = ISN * 0.10
        </field>
        <field name="note">
Aportación para la Universidad Autónoma del estado si es que aplica
        </field>
        <field name="sequence" eval="1000006" />
    </record>

    <!-- Perceptions -->
    <record id="hr_salary_rule_perception_002_e_602_ff" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo (E)</field>
        <field name="code">PE002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.l10n_mx_edi_daily_wage) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')

if 1 > seniority['years']:
    bonus_total = (bonus_total / 365) * seniority['days']

# Minimum wage set with values of SAT http://www.sat.gob.mx/informacion_fiscal/tablas_indicadores/Documents/salarios_minimos_historico.xls

uma = contract.company_id.l10n_mx_edi_uma
amount_exempt = uma * 30

diff =  bonus_total - amount_exempt

result = bonus_total
if diff >= 0:
    result =  amount_exempt</field>
        <field name="note">Sólo 30 días de SM queda exento, el excedente es gravado</field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_002_g_602_ff" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo (G)</field>
        <field name="code">PG002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.l10n_mx_edi_daily_wage) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')

if 1 > seniority['years']:
    bonus_total = (bonus_total /365) * seniority['days']

# Minimum wage set with values of SAT http://www.sat.gob.mx/informacion_fiscal/tablas_indicadores/Documents/salarios_minimos_historico.xls

uma = contract.company_id.l10n_mx_edi_uma
amount_exempt = uma * 30

diff =  bonus_total - amount_exempt
result = 0
if diff > 0:
    result =  diff</field>
        <field name="note">Sólo 30 días de SM queda exento, el excedente es gravado</field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_021_e_christmas_602_ff" model="hr.salary.rule">
        <field name="name">Prima vacacional (E)</field>
        <field name="code">PE021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus_type = (payslip.company_id or contract.company_id).l10n_mx_edi_vacation_bonus
result = 0
holidays = contract._get_vacation_days(date_to=payslip.date_to) if vacation_bonus_type == 'on_christmas_bonus' else False
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * (holidays * (contract.l10n_mx_edi_vacation_bonus / 100))
    result = uma * 15 if result >= (uma * 15) else result
        </field>
        <field name="note">Sólo 15 UMA son exentos, el excedente es gravado</field>
        <field name="sequence" eval="21000" />
    </record>

    <record id="hr_salary_rule_perception_021_g_christmas_602_ff" model="hr.salary.rule">
        <field name="name">Prima vacacional (G)</field>
        <field name="code">PG021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus_type = (payslip.company_id or contract.company_id).l10n_mx_edi_vacation_bonus
result = 0
holidays = contract._get_vacation_days(date_to=payslip.date_to) if vacation_bonus_type == 'on_christmas_bonus' else 0
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * (holidays * (contract.l10n_mx_edi_vacation_bonus / 100))
    result = result - (uma * 15) if result >= (uma * 15) else 0
        </field>
        <field name="note">Sólo 15 UMA son exentos, el excedente es gravado</field>
        <field name="sequence" eval="21000" />
    </record>

    <record id="hr_salary_rule_other_payment_aux_02_602_ff" model="hr.salary.rule">
        <field name="name">Auxiliar Subsidio para el empleo</field>
        <field name="code">AUX_OP002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Based on http://www.sat.gob.mx/informacion_fiscal/devoluciones_compensaciones/Paginas/subsidio_al_empleo.aspx
# TODO - Complete tables
income_period = categories['PERGRA']
table = {
    '05': [
        (0.01, 1768.96, 407.02),
        (1768.97, 2653.38, 406.83),
        (2653.39, 3472.84, 406.62),
        (3472.85, 3537.87, 392.77),
        (3537.88, 4446.15, 382.46),
        (4446.16, 4717.18, 354.23),
        (4717.19, 5335.42, 324.87),
        (5335.43, 6224.67, 294.63),
        (6224.68, 7113.90, 253.54),
        (7113.91, 7382.33, 217.61),
        (7382.34, 99999999.00, 0)],
    '04': [
        (0.01, 872.85, 200.85),
        (872.86, 1309.20, 200.70),
        (1309.21, 1713.60, 200.70),
        (1713.61, 1745.70, 193.80),
        (1745.71, 2193.75, 188.70),
        (2193.76, 2327.55, 174.75),
        (2327.56, 2632.65, 160.35),
        (2632.66, 3071.40, 145.35),
        (3071.41, 3510.15, 125.10),
        (3510.16, 3642.60, 107.40),
        (3642.61, 99999999.00, 0)],
}
result = 0.00
table = table.get(contract.l10n_mx_edi_schedule_pay_id.code, [])
if table:
    for value in table:
        if income_period >=value[0] and value[1] >= income_period:
            result = value[2]
            break</field>
        <field name="sequence" eval="53501" />
    </record>

    <record id="hr_salary_rule_deduction_aguinaldo_002_602_ff" model="hr.salary.rule">
        <field name="name">ISR - Aguinaldo</field>
        <field name="code">002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Basado en la ley 174 de ISR
table = [(0.01, 746.04, 0.00, 0.0192), (746.05, 6332.05, 14.32, 0.0640),
         (6332.06, 11128.01, 371.83, 0.1088), (11128.02, 12935.82, 893.63, 0.1600),
         (12935.83, 15487.71, 1182.88, 0.1792), (15487.72, 31236.49, 1640.18, 0.2136),
         (31236.50, 49233.00, 5004.12, 0.2352), (49233.01, 93993.90, 9236.89, 0.3000),
         (93993.91, 125325.20, 22665.17, 0.3200), (125325.21, 375975.61, 32691.18, 0.3400),
         (375975.62, 999999999, 117912.32, 0.3500)]
income_period = categories['PERGRA']
income_exe = categories.PEREXE
wage = contract.wage

year = payslip.l10n_mx_edi_payment_date.year
days_year = 365
if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    days_year = 366

art_174_lisr = income_period / days_year * 30.4
base_gravable = art_174_lisr + wage

result1 = result2 = 0

for value in table:
   if base_gravable >=value[0] and value[1] >= base_gravable:
       result1 = (((base_gravable - value[0]) * value[3]) + value[2]) * -1

for value in table:
   if wage >=value[0] and value[1] >= wage:
       result2 = (((wage - value[0]) * value[3]) + value[2]) * -1

isr = result2 - result1
efective_rate = isr / (art_174_lisr or 1)
result = (income_period * efective_rate)
        </field>
        <field name="sequence" eval="55100" />
    </record>

    <record id="hr_salary_rule_deduction_071_02_602_ff" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">ASEE</field>
        <field name="l10n_mx_edi_code">071</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.asee and inputs.asee.amount or 0.0</field>
        <field name="sequence" eval="81700" />
    </record>

    <record id="hr_payslip_input_type_deduction_071_02_602_ff" model="hr.payslip.input.type">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">asee</field>
        <field name="country_id" ref="base.mx" />
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_aguinaldo_602_ff')])]" />
    </record>

    <record id="hr_salary_rule_other_payment_002_02_602_ff" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">OP002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = employee.l10n_mx_edi_contract_regime_type == '02'</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0.0
        </field>
        <field name="sequence" eval="87000" />
    </record>

    <record id="hr_salary_rule_deduction_007_a02_602_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">A02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony:
    alimony = alimony[0]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <record id="hr_salary_rule_deduction_007_b02_602_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">B02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 1:
    alimony = alimony[1]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <record id="hr_salary_rule_deduction_007_c02_602_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">C02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 2:
    alimony = alimony[2]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <!-- Sueldo Neto -->
    <record id="hr_salary_rule_total_excempt_02_602_ff" model="hr.salary.rule">
        <field name="name">Total Exento</field>
        <field name="code">Exento</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PEREXE</field>
        <field name="sequence" eval="999996" />
    </record>

    <record id="hr_salary_rule_total_taxed_02_602_ff" model="hr.salary.rule">
        <field name="name">Total Gravado</field>
        <field name="code">Gravado</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PERGRA</field>
        <field name="sequence" eval="999997" />
    </record>

    <record id="hr_salary_rule_total_deductions_02_602_ff" model="hr.salary.rule">
        <field name="name">Total Deducciones</field>
        <field name="code">Deducciones</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.DED</field>
        <field name="sequence" eval="999998" />
    </record>

    <record id="hr_salary_rule_total_other_02_602_ff" model="hr.salary.rule">
        <field name="name">Total Otros Pagos</field>
        <field name="code">OtrosPagos</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.OTHER</field>
        <field name="sequence" eval="999999" />
    </record>

    <record id="hr_salary_rule_net_salary_02_602_ff" model="hr.salary.rule">
        <field name="name">Net Salary</field>
        <field name="code">NET</field>
        <field name="category_id" ref="hr_payroll.NET" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories.PERGRA - categories.DED + categories.PEREXE + categories.OTHER</field>
        <field name="sequence" eval="1000000" />
    </record>

    <record id="hr_salary_rule_isn_christmas_602_ff" model="hr.salary.rule">
        <field name="name">ISN - Aguinaldo</field>
        <field name="code">ISN</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="note"
        >Gravado multiplicado por el porcentaje de ISN del estado de la dirección de trabajo y agregado a Company Contribution</field>
        <field name="amount_python_compute">
result = (categories.PERGRA + categories.PEREXE) * employee.get_isn_percentage()
        </field>
        <field name="sequence" eval="1000005" />
    </record>

    <record id="hr_salary_rule_isn_university_christmas_602_ff" model="hr.salary.rule">
        <field name="name">Aportación a Universidad Autónoma</field>
        <field name="code">AUA</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_602_ff" />
        <field name="condition_select">python</field>
        <field name="condition_python">
# Now only supported for Zacatecas
result = employee.address_id.state_id == employee.env.ref('base.state_mx_zac')
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = ISN * 0.10
        </field>
        <field name="note">
Aportación para la Universidad Autónoma del estado si es que aplica
        </field>
        <field name="sequence" eval="1000006" />
    </record>

    <!-- Perceptions -->
    <record id="hr_salary_rule_perception_002_e_603_ff" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo (E)</field>
        <field name="code">PE002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.l10n_mx_edi_daily_wage) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')

if 1 > seniority['years']:
    bonus_total = (bonus_total / 365) * seniority['days']

# Minimum wage set with values of SAT http://www.sat.gob.mx/informacion_fiscal/tablas_indicadores/Documents/salarios_minimos_historico.xls

uma = contract.company_id.l10n_mx_edi_uma
amount_exempt = uma * 30

diff =  bonus_total - amount_exempt

result = bonus_total
if diff >= 0:
    result =  amount_exempt</field>
        <field name="note">Sólo 30 días de SM queda exento, el excedente es gravado</field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_002_g_603_ff" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo (G)</field>
        <field name="code">PG002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.l10n_mx_edi_daily_wage) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')

if 1 > seniority['years']:
    bonus_total = (bonus_total /365) * seniority['days']

# Minimum wage set with values of SAT http://www.sat.gob.mx/informacion_fiscal/tablas_indicadores/Documents/salarios_minimos_historico.xls

uma = contract.company_id.l10n_mx_edi_uma
amount_exempt = uma * 30

diff =  bonus_total - amount_exempt
result = 0
if diff > 0:
    result =  diff</field>
        <field name="note">Sólo 30 días de SM queda exento, el excedente es gravado</field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_021_e_christmas_603_ff" model="hr.salary.rule">
        <field name="name">Prima vacacional (E)</field>
        <field name="code">PE021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus_type = (payslip.company_id or contract.company_id).l10n_mx_edi_vacation_bonus
result = 0
holidays = contract._get_vacation_days(date_to=payslip.date_to) if vacation_bonus_type == 'on_christmas_bonus' else False
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * (holidays * (contract.l10n_mx_edi_vacation_bonus / 100))
    result = uma * 15 if result >= (uma * 15) else result
        </field>
        <field name="note">Sólo 15 UMA son exentos, el excedente es gravado</field>
        <field name="sequence" eval="21000" />
    </record>

    <record id="hr_salary_rule_perception_021_g_christmas_603_ff" model="hr.salary.rule">
        <field name="name">Prima vacacional (G)</field>
        <field name="code">PG021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus_type = (payslip.company_id or contract.company_id).l10n_mx_edi_vacation_bonus
result = 0
holidays = contract._get_vacation_days(date_to=payslip.date_to) if vacation_bonus_type == 'on_christmas_bonus' else 0
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * (holidays * (contract.l10n_mx_edi_vacation_bonus / 100))
    result = result - (uma * 15) if result >= (uma * 15) else 0
        </field>
        <field name="note">Sólo 15 UMA son exentos, el excedente es gravado</field>
        <field name="sequence" eval="21000" />
    </record>

    <record id="hr_salary_rule_other_payment_aux_02_603_ff" model="hr.salary.rule">
        <field name="name">Auxiliar Subsidio para el empleo</field>
        <field name="code">AUX_OP002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Based on http://www.sat.gob.mx/informacion_fiscal/devoluciones_compensaciones/Paginas/subsidio_al_empleo.aspx
# TODO - Complete tables
income_period = categories['PERGRA']
table = {
    '05': [
        (0.01, 1768.96, 407.02),
        (1768.97, 2653.38, 406.83),
        (2653.39, 3472.84, 406.62),
        (3472.85, 3537.87, 392.77),
        (3537.88, 4446.15, 382.46),
        (4446.16, 4717.18, 354.23),
        (4717.19, 5335.42, 324.87),
        (5335.43, 6224.67, 294.63),
        (6224.68, 7113.90, 253.54),
        (7113.91, 7382.33, 217.61),
        (7382.34, 99999999.00, 0)],
    '04': [
        (0.01, 872.85, 200.85),
        (872.86, 1309.20, 200.70),
        (1309.21, 1713.60, 200.70),
        (1713.61, 1745.70, 193.80),
        (1745.71, 2193.75, 188.70),
        (2193.76, 2327.55, 174.75),
        (2327.56, 2632.65, 160.35),
        (2632.66, 3071.40, 145.35),
        (3071.41, 3510.15, 125.10),
        (3510.16, 3642.60, 107.40),
        (3642.61, 99999999.00, 0)],
}
result = 0.00
table = table.get(contract.l10n_mx_edi_schedule_pay_id.code, [])
if table:
    for value in table:
        if income_period >=value[0] and value[1] >= income_period:
            result = value[2]
            break</field>
        <field name="sequence" eval="53501" />
    </record>

    <record id="hr_salary_rule_deduction_aguinaldo_002_603_ff" model="hr.salary.rule">
        <field name="name">ISR - Aguinaldo</field>
        <field name="code">002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Basado en la ley 174 de ISR
table = [(0.01, 746.04, 0.00, 0.0192), (746.05, 6332.05, 14.32, 0.0640),
         (6332.06, 11128.01, 371.83, 0.1088), (11128.02, 12935.82, 893.63, 0.1600),
         (12935.83, 15487.71, 1182.88, 0.1792), (15487.72, 31236.49, 1640.18, 0.2136),
         (31236.50, 49233.00, 5004.12, 0.2352), (49233.01, 93993.90, 9236.89, 0.3000),
         (93993.91, 125325.20, 22665.17, 0.3200), (125325.21, 375975.61, 32691.18, 0.3400),
         (375975.62, 999999999, 117912.32, 0.3500)]
income_period = categories['PERGRA']
income_exe = categories.PEREXE
wage = contract.wage

year = payslip.l10n_mx_edi_payment_date.year
days_year = 365
if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    days_year = 366

art_174_lisr = income_period / days_year * 30.4
base_gravable = art_174_lisr + wage

result1 = result2 = 0

for value in table:
   if base_gravable >=value[0] and value[1] >= base_gravable:
       result1 = (((base_gravable - value[0]) * value[3]) + value[2]) * -1

for value in table:
   if wage >=value[0] and value[1] >= wage:
       result2 = (((wage - value[0]) * value[3]) + value[2]) * -1

isr = result2 - result1
efective_rate = isr / (art_174_lisr or 1)
result = (income_period * efective_rate)
        </field>
        <field name="sequence" eval="55100" />
    </record>

    <record id="hr_salary_rule_deduction_071_02_603_ff" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">ASEE</field>
        <field name="l10n_mx_edi_code">071</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.asee and inputs.asee.amount or 0.0</field>
        <field name="sequence" eval="81700" />
    </record>

    <record id="hr_payslip_input_type_deduction_071_02_603_ff" model="hr.payslip.input.type">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">asee</field>
        <field name="country_id" ref="base.mx" />
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_aguinaldo_603_ff')])]" />
    </record>

    <record id="hr_salary_rule_other_payment_002_02_603_ff" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">OP002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = employee.l10n_mx_edi_contract_regime_type == '02'</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0.0
        </field>
        <field name="sequence" eval="87000" />
    </record>

    <record id="hr_salary_rule_deduction_007_a02_603_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">A02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony:
    alimony = alimony[0]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <record id="hr_salary_rule_deduction_007_b02_603_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">B02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 1:
    alimony = alimony[1]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <record id="hr_salary_rule_deduction_007_c02_603_ff" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="code">C02007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 2:
    alimony = alimony[2]
    if alimony.discount_type == 'percentage_christmas_holidays':
        result += (PE002 + PG002 + PE021 + PG021) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_christmas':
        result += (PE002 + PG002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed_christmas' and (PE002 + PG002):
        result += alimony.discount_amount
        </field>
        <field name="sequence" eval="600006" />
    </record>

    <!-- Sueldo Neto -->
    <record id="hr_salary_rule_total_excempt_02_603_ff" model="hr.salary.rule">
        <field name="name">Total Exento</field>
        <field name="code">Exento</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PEREXE</field>
        <field name="sequence" eval="999996" />
    </record>

    <record id="hr_salary_rule_total_taxed_02_603_ff" model="hr.salary.rule">
        <field name="name">Total Gravado</field>
        <field name="code">Gravado</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PERGRA</field>
        <field name="sequence" eval="999997" />
    </record>

    <record id="hr_salary_rule_total_deductions_02_603_ff" model="hr.salary.rule">
        <field name="name">Total Deducciones</field>
        <field name="code">Deducciones</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.DED</field>
        <field name="sequence" eval="999998" />
    </record>

    <record id="hr_salary_rule_total_other_02_603_ff" model="hr.salary.rule">
        <field name="name">Total Otros Pagos</field>
        <field name="code">OtrosPagos</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.OTHER</field>
        <field name="sequence" eval="999999" />
    </record>

    <record id="hr_salary_rule_net_salary_02_603_ff" model="hr.salary.rule">
        <field name="name">Net Salary</field>
        <field name="code">NET</field>
        <field name="category_id" ref="hr_payroll.NET" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories.PERGRA - categories.DED + categories.PEREXE + categories.OTHER</field>
        <field name="sequence" eval="1000000" />
    </record>

    <record id="hr_salary_rule_isn_christmas_603_ff" model="hr.salary.rule">
        <field name="name">ISN - Aguinaldo</field>
        <field name="code">ISN</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="note"
        >Gravado multiplicado por el porcentaje de ISN del estado de la dirección de trabajo y agregado a Company Contribution</field>
        <field name="amount_python_compute">
result = (categories.PERGRA + categories.PEREXE) * employee.get_isn_percentage()
        </field>
        <field name="sequence" eval="1000005" />
    </record>

    <record id="hr_salary_rule_isn_university_christmas_603_ff" model="hr.salary.rule">
        <field name="name">Aportación a Universidad Autónoma</field>
        <field name="code">AUA</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="hr_payroll_structure_aguinaldo_603_ff" />
        <field name="condition_select">python</field>
        <field name="condition_python">
# Now only supported for Zacatecas
result = employee.address_id.state_id == employee.env.ref('base.state_mx_zac')
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = ISN * 0.10
        </field>
        <field name="note">
Aportación para la Universidad Autónoma del estado si es que aplica
        </field>
        <field name="sequence" eval="1000006" />
    </record>

    <!-- Estructure Nomina + Aguinaldo NF -->
    <!-- Perceptions -->
    <record id="hr_salary_rule_perception_001_g_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Sueldos, Salarios Rayas y Jornales</field>
        <field name="code">PG001</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.wage * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = contract.wage * 0.5
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.wage * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.wage * 10
        </field>
        <field name="sequence" eval="10" />
    </record>

    <record id="hr_salary_rule_perception_019_es_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Horas extra</field>
        <field name="code">PE019</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.wage * 12) / year_days)
hourly_wage = (daily_wage / 8)
result = inputs.pe_019 and inputs.pe_019.amount * hourly_wage
        </field>
        <field name="sequence" eval="102" />
    </record>

    <record id="hr_payslip_input_type_perception_019_es_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Horas extra</field>
        <field name="code">pe_019</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_028_g_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Comisiones</field>
        <field name="code">PG028</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_028'].amount if 'pg_028' in inputs else 0</field>
        <field name="sequence" eval="12" />
    </record>

    <record id="hr_payslip_input_type_perception_028_g_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Comisiones</field>
        <field name="code">pg_028</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_047_e_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Alimentación</field>
        <field name="code">PE047</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.l10n_mx_edi_feeding * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = daily_wage * 15
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_feeding
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_feeding * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_feeding * 10
        </field>
        <field name="sequence" eval="11" />
    </record>

    <record id="hr_salary_rule_perception_033_g_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Ayuda para renta</field>
        <field name="code">PG033</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.l10n_mx_edi_housing * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = daily_wage * 15
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_housing
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_housing * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_housing * 10
        </field>
        <field name="sequence" eval="14" />
    </record>

    <record id="hr_salary_rule_perception_050_e_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Viáticos</field>
        <field name="code">PE050</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_050'].amount if 'pe_050' in inputs else 0</field>
        <field name="sequence" eval="50000" />
    </record>

    <record id="hr_payslip_input_type_perception_050_e_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Viaticos</field>
        <field name="code">pe_050</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_038_e_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Otros ingresos por salarios</field>
        <field name="code">PE038</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_038'].amount if 'pe_038' in inputs else 0</field>
        <field name="sequence" eval="18" />
    </record>

    <record id="hr_payslip_input_type_perception_038_e_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Otros ingresos por salarios</field>
        <field name="code">pe_038</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <!-- Deductions -->
    <record id="hr_salary_rule_deduction_004_loan_company_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Pago de préstamo</field>
        <field name="code">PC004</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = inputs['pe_0004'].amount * -1 if 'pe_0004' in inputs else 0</field>
        <field name="sequence" eval="61" />
    </record>

    <record
        id="hr_payslip_input_type_deduction_004_loan_company_nomina_aguinaldo_601_nf"
        model="hr.payslip.input.type"
    >
        <field name="name">Pago de prestamo</field>
        <field name="code">pc_004</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <record id="hr_salary_rule_deduction_014_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Averías, Errores, Pérdidas</field>
        <field name="code">014</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_014'].amount * -1 if 'd_014 ' in inputs else 0</field>
        <field name="sequence" eval="102" />
    </record>

    <record id="hr_payslip_input_type_deduction_014_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Averias, Errores, Perdidas</field>
        <field name="code">d_014</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <record id="hr_salary_rule_deduction_020_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="code">020</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if contract.l10n_mx_edi_schedule_pay_id.code in ['01', '02', '03']:
    year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
    daily_wage = ((contract.wage * 12) / year_days)
    result = inputs['d_020'].amount * daily_wage * -1 if 'd_020 ' in inputs else 0
elif contract.l10n_mx_edi_schedule_pay_id.code in ['04', '05', '06', '10']:
    daily_wage = contract.wage / 30
    result = inputs['d_020'].amount * daily_wage * -1 if 'd_020 ' in inputs else 0
        </field>
        <field name="sequence" eval="103" />
    </record>

    <record id="hr_payslip_input_type_deduction_020_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="code">d_020</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <!-- Other -->
    <record id="hr_salary_rule_other_payment_999_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Préstamo personal</field>
        <field name="code">OP999</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_other_mx" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_999'].amount if 'op_999 ' in inputs else 0</field>
        <field name="sequence" eval="201" />
    </record>

    <record id="hr_payslip_input_type_other_payment_999_nomina_aguinaldo_601_nf" model="hr.payslip.input.type">
        <field name="name">Prestamo personal</field>
        <field name="code">op_999</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_601_nf')])]" />
    </record>

    <!-- Aguinaldo -->
    <record id="hr_salary_rule_perception_002_e_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo</field>
        <field name="code">PE002</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.wage/30) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')
if 1 > seniority['years']:
    bonus_total = (bonus_total / 365) * seniority['days']
result = bonus_total
        </field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_021_e_christmas_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Prima vacacional</field>
        <field name="code">PE021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays = contract._get_vacation_days(contract.date_start, payslip.date_to)
daily_wage = contract.wage / 30
result = daily_wage * holidays * 0.25
        </field>
        <field name="sequence" eval="21000" />
    </record>

    <!-- Net -->
    <record id="hr_salary_rule_net_salary_02_nomina_aguinaldo_601_nf" model="hr.salary.rule">
        <field name="name">Salario Neto</field>
        <field name="code">NET</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_601_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories['PERGRA'] + categories['DED'] + categories['PEREXE'] + categories['OTHER']</field>
        <field name="sequence" eval="1000000" />
    </record>

    <!-- Perceptions -->
    <record id="hr_salary_rule_perception_001_g_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Sueldos, Salarios Rayas y Jornales</field>
        <field name="code">PG001</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.wage * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = contract.wage * 0.5
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.wage * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.wage * 10
        </field>
        <field name="sequence" eval="10" />
    </record>

    <record id="hr_salary_rule_perception_019_es_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Horas extra</field>
        <field name="code">PE019</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.wage * 12) / year_days)
hourly_wage = (daily_wage / 8)
result = inputs.pe_019 and inputs.pe_019.amount * hourly_wage
        </field>
        <field name="sequence" eval="102" />
    </record>

    <record id="hr_payslip_input_type_perception_019_es_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Horas extra</field>
        <field name="code">pe_019</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_028_g_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Comisiones</field>
        <field name="code">PG028</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_028'].amount if 'pg_028' in inputs else 0</field>
        <field name="sequence" eval="12" />
    </record>

    <record id="hr_payslip_input_type_perception_028_g_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Comisiones</field>
        <field name="code">pg_028</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_047_e_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Alimentación</field>
        <field name="code">PE047</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.l10n_mx_edi_feeding * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = daily_wage * 15
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_feeding
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_feeding * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_feeding * 10
        </field>
        <field name="sequence" eval="11" />
    </record>

    <record id="hr_salary_rule_perception_033_g_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Ayuda para renta</field>
        <field name="code">PG033</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.l10n_mx_edi_housing * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = daily_wage * 15
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_housing
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_housing * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_housing * 10
        </field>
        <field name="sequence" eval="14" />
    </record>

    <record id="hr_salary_rule_perception_050_e_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Viáticos</field>
        <field name="code">PE050</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_050'].amount if 'pe_050' in inputs else 0</field>
        <field name="sequence" eval="50000" />
    </record>

    <record id="hr_payslip_input_type_perception_050_e_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Viaticos</field>
        <field name="code">pe_050</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_038_e_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Otros ingresos por salarios</field>
        <field name="code">PE038</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_038'].amount if 'pe_038' in inputs else 0</field>
        <field name="sequence" eval="18" />
    </record>

    <record id="hr_payslip_input_type_perception_038_e_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Otros ingresos por salarios</field>
        <field name="code">pe_038</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <!-- Deductions -->
    <record id="hr_salary_rule_deduction_004_loan_company_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Pago de préstamo</field>
        <field name="code">PC004</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = inputs['pe_0004'].amount * -1 if 'pe_0004' in inputs else 0</field>
        <field name="sequence" eval="61" />
    </record>

    <record id="hr_payslip_input_type_deduction_004_loan_company_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Pago de prestamo</field>
        <field name="code">pc_004</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <record id="hr_salary_rule_deduction_014_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Averías, Errores, Pérdidas</field>
        <field name="code">014</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_014'].amount * -1 if 'd_014 ' in inputs else 0</field>
        <field name="sequence" eval="102" />
    </record>

    <record id="hr_payslip_input_type_deduction_014_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Averias, Errores, Perdidas</field>
        <field name="code">d_014</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <record id="hr_salary_rule_deduction_020_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="code">020</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if contract.l10n_mx_edi_schedule_pay_id.code in ['01', '02', '03']:
    year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
    daily_wage = ((contract.wage * 12) / year_days)
    result = inputs['d_020'].amount * daily_wage * -1 if 'd_020 ' in inputs else 0
elif contract.l10n_mx_edi_schedule_pay_id.code in ['04', '05', '06', '10']:
    daily_wage = contract.wage / 30
    result = inputs['d_020'].amount * daily_wage * -1 if 'd_020 ' in inputs else 0
        </field>
        <field name="sequence" eval="103" />
    </record>

    <record id="hr_payslip_input_type_deduction_020_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="code">d_020</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <!-- Other -->
    <record id="hr_salary_rule_other_payment_999_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Préstamo personal</field>
        <field name="code">OP999</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_other_mx" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_999'].amount if 'op_999 ' in inputs else 0</field>
        <field name="sequence" eval="201" />
    </record>

    <record id="hr_payslip_input_type_other_payment_999_aguinaldo_602_nf" model="hr.payslip.input.type">
        <field name="name">Prestamo personal</field>
        <field name="code">op_999</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_602_nf')])]" />
    </record>

    <!-- Aguinaldo -->
    <record id="hr_salary_rule_perception_002_e_nomina_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo</field>
        <field name="code">PE002</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.wage/30) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')
if 1 > seniority['years']:
    bonus_total = (bonus_total / 365) * seniority['days']
result = bonus_total
        </field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_021_e_christmas_nomina_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Prima vacacional</field>
        <field name="code">PE021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays = contract._get_vacation_days(contract.date_start, payslip.date_to)
daily_wage = contract.wage / 30
result = daily_wage * holidays * 0.25
        </field>
        <field name="sequence" eval="21000" />
    </record>

    <!-- Net -->
    <record id="hr_salary_rule_net_salary_02_nomina_aguinaldo_602_nf" model="hr.salary.rule">
        <field name="name">Salario Neto</field>
        <field name="code">NET</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_602_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories['PERGRA'] + categories['DED'] + categories['PEREXE'] + categories['OTHER']</field>
        <field name="sequence" eval="1000000" />
    </record>

    <!-- Perceptions -->
    <record id="hr_salary_rule_perception_001_g_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Sueldos, Salarios Rayas y Jornales</field>
        <field name="code">PG001</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.wage * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = contract.wage * 0.5
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.wage * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.wage * 10
        </field>
        <field name="sequence" eval="10" />
    </record>

    <record id="hr_salary_rule_perception_019_es_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Horas extra</field>
        <field name="code">PE019</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.wage * 12) / year_days)
hourly_wage = (daily_wage / 8)
result = inputs.pe_019 and inputs.pe_019.amount * hourly_wage
        </field>
        <field name="sequence" eval="102" />
    </record>

    <record id="hr_payslip_input_type_perception_019_es_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Horas extra</field>
        <field name="code">pe_019</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_028_g_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Comisiones</field>
        <field name="code">PG028</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_028'].amount if 'pg_028' in inputs else 0</field>
        <field name="sequence" eval="12" />
    </record>

    <record id="hr_payslip_input_type_perception_028_g_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Comisiones</field>
        <field name="code">pg_028</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_047_e_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Alimentación</field>
        <field name="code">PE047</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.l10n_mx_edi_feeding * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = daily_wage * 15
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_feeding
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_feeding * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_feeding * 10
        </field>
        <field name="sequence" eval="11" />
    </record>

    <record id="hr_salary_rule_perception_033_g_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Ayuda para renta</field>
        <field name="code">PG033</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
daily_wage = ((contract.l10n_mx_edi_housing * 12) / year_days)
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = daily_wage
elif contract.l10n_mx_edi_schedule_pay_id.code == '02':
    result = daily_wage * 7
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = daily_wage * 14
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = daily_wage * 15
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_housing
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_housing * 2
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_housing * 10
        </field>
        <field name="sequence" eval="14" />
    </record>

    <record id="hr_salary_rule_perception_050_e_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Viáticos</field>
        <field name="code">PE050</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_050'].amount if 'pe_050' in inputs else 0</field>
        <field name="sequence" eval="50000" />
    </record>

    <record id="hr_payslip_input_type_perception_050_e_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Viaticos</field>
        <field name="code">pe_050</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <record id="hr_salary_rule_perception_038_e_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Otros ingresos por salarios</field>
        <field name="code">PE038</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="sequence" eval="18" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_038'].amount if 'pe_038' in inputs else 0</field>
    </record>

    <record id="hr_payslip_input_type_perception_038_e_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Otros ingresos por salarios</field>
        <field name="code">pe_038</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <!-- Deductions -->
    <record id="hr_salary_rule_deduction_004_loan_company_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Pago de préstamo</field>
        <field name="code">PC004</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = inputs['pe_0004'].amount * -1 if 'pe_0004' in inputs else 0</field>
        <field name="sequence">61</field>
    </record>

    <record id="hr_payslip_input_type_deduction_004_loan_company_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Pago de prestamo</field>
        <field name="code">pc_004</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <record id="hr_salary_rule_deduction_014_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Averías, Errores, Pérdidas</field>
        <field name="code">014</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_014'].amount * -1 if 'd_014 ' in inputs else 0</field>
        <field name="sequence" eval="102" />
    </record>

    <record id="hr_payslip_input_type_deduction_014_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Averias, Errores, Perdidas</field>
        <field name="code">d_014</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <record id="hr_salary_rule_deduction_020_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="code">020</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if contract.l10n_mx_edi_schedule_pay_id.code in ['01', '02', '03']:
    year_days = contract._l10n_mx_edi_year_days(payslip.date_to)
    daily_wage = ((contract.wage * 12) / year_days)
    result = inputs['d_020'].amount * daily_wage * -1 if 'd_020 ' in inputs else 0
elif contract.l10n_mx_edi_schedule_pay_id.code in ['04', '05', '06', '10']:
    daily_wage = contract.wage / 30
    result = inputs['d_020'].amount * daily_wage * -1 if 'd_020 ' in inputs else 0
        </field>
        <field name="sequence" eval="103" />
    </record>

    <record id="hr_payslip_input_type_deduction_020_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="code">d_020</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <!-- Other -->
    <record id="hr_salary_rule_other_payment_999_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Préstamo personal</field>
        <field name="code">OP999</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_other_mx" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_999'].amount if 'op_999 ' in inputs else 0</field>
        <field name="sequence" eval="201" />
    </record>

    <record id="hr_payslip_input_type_other_payment_999_aguinaldo_603_nf" model="hr.payslip.input.type">
        <field name="name">Prestamo personal</field>
        <field name="code">op_999</field>
        <field name="struct_ids" eval="[(6, 0, [ref('hr_payroll_structure_nomina_aguinaldo_603_nf')])]" />
    </record>

    <!-- Aguinaldo -->
    <record id="hr_salary_rule_perception_002_e_nomina_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Gratificación Anual - Aguinaldo</field>
        <field name="code">PE002</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
bonus_total = (contract.wage/30) * (contract.l10n_mx_edi_christmas_bonus or 15)
seniority = contract.get_seniority(date_to=payslip.date_to, method='a')
if 1 > seniority['years']:
    bonus_total = (bonus_total / 365) * seniority['days']
result = bonus_total
        </field>
        <field name="sequence" eval="2000" />
    </record>

    <record id="hr_salary_rule_perception_021_e_christmas_nomina_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Prima vacacional</field>
        <field name="code">PE021</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays = contract._get_vacation_days(contract.date_start, payslip.date_to)
daily_wage = contract.wage / 30
result = daily_wage * holidays * 0.25
        </field>
        <field name="sequence" eval="21000" />
    </record>

    <!-- Net -->
    <record id="hr_salary_rule_net_salary_02_nomina_aguinaldo_603_nf" model="hr.salary.rule">
        <field name="name">Salario Neto</field>
        <field name="code">NET</field>
        <field name="struct_id" ref="hr_payroll_structure_nomina_aguinaldo_603_nf" />
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_netsa_mx" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories['PERGRA'] + categories['DED'] + categories['PEREXE'] + categories['OTHER']</field>
        <field name="sequence" eval="1000000" />
    </record>
</odoo>
