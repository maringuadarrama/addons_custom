<?xml version="1.0" encoding="UTF-8" ?>
<odoo>

    <record id="hr_rule_l10n_mx_payroll_basic_salary" model="hr.salary.rule">
        <field name="name">Salario Base</field>
        <field name="sequence" eval="1" />
        <field name="code">BASIC</field>
        <field name="category_id" ref="hr_payroll.BASIC" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    # In case commission or raised price
    holidays = worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
    # Permiso con goce
    holidays += worked_days['LEAVE100'].number_of_days if 'LEAVE100' in worked_days else 0.0
    # Permiso de Paternidad
    holidays += worked_days['LEAVE130'].number_of_days if 'LEAVE130' in worked_days else 0.0
    # Licencia de adopción
    holidays += worked_days['LEAVE116'].number_of_days if 'LEAVE116' in worked_days else 0.0
    # Not enjoyed holiday days
    work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
    holiday_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))

    days_to_pay = contract.l10n_mx_edi_schedule_pay_id.days_to_pay
    if contract.company_id.l10n_mx_edi_salary_worked_days:
        days_to_pay = sum([worked.number_of_days for worked in worked_days.values()])

    result = contract.l10n_mx_edi_daily_wage * (days_to_pay - holidays)
    result += contract.l10n_mx_edi_daily_wage * holiday_not_enjoyed
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_006_fjss_aux" model="hr.salary.rule">
        <field name="name">Falta Justificada Sin Goce de Salario</field>
        <field name="sequence" eval="3" />
        <field name="code">FJSS</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = not contract.company_id.l10n_mx_edi_use_leave_deduction</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
leaves = (worked_days['LEAVE114'].number_of_days * worked_days['LEAVE114'].work_entry_type_id.l10n_mx_edi_factor) if 'LEAVE114' in worked_days else 0.0
leaves += (worked_days['LEAVE115'].number_of_days * worked_days['LEAVE115'].work_entry_type_id.l10n_mx_edi_factor) if 'LEAVE115' in worked_days else 0.0
result = leaves * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_020_aux" model="hr.salary.rule">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="sequence" eval="4" />
        <field name="code">D020</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = not contract.company_id.l10n_mx_edi_use_leave_deduction</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
leaves = (worked_days['LEAVE90'].number_of_days * worked_days['LEAVE90'].work_entry_type_id.l10n_mx_edi_factor) if 'LEAVE90' in worked_days else 0.0
result = contract.l10n_mx_edi_daily_wage * leaves
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_not_attedance" model="hr.salary.rule">
        <field name="name">Días sin registro de asistencia</field>
        <field name="sequence" eval="2" />
        <field name="code">LAT</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = worked_days['LEAVE150'].number_of_days if 'LEAVE150' in worked_days else 0.0
days = inputs['LAT'].amount if 'LAT' in inputs else 0
result = contract.l10n_mx_edi_daily_wage * days
        </field>
    </record>

    <!-- Perceptions -->
    <record id="hr_rule_l10n_mx_payroll_perception_001_g" model="hr.salary.rule">
        <field name="name">Sueldos, Salarios Rayas y Jornales</field>
        <field name="sequence" eval="1000" />
        <field name="code">PG001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = not employee.l10n_mx_edi_is_assimilated</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
salary = BASIC - DNL004 - LAT
salary -= FJSS + D020 if not contract.company_id.l10n_mx_edi_use_leave_deduction else 0
result = salary
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_holidays" model="hr.salary.rule">
        <field name="name">Vacaciones</field>
        <field name="sequence" eval="1010" />
        <field name="code">PGH001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays = worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
holidays += inputs['pgh_001'].amount if 'pgh_001' in inputs else 0.0
work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
holiday_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
holidays = 0 if holiday_not_enjoyed &gt;= holidays else holidays - holiday_not_enjoyed
result = contract.l10n_mx_edi_daily_wage * holidays
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_holidays_not_enjoyed" model="hr.salary.rule">
        <field name="name">Vacaciones no disfrutadas</field>
        <field name="sequence" eval="1020" />
        <field name="code">PGHNOE001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
holiday_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
result = contract.l10n_mx_edi_daily_wage * holiday_not_enjoyed
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_permiso" model="hr.salary.rule">
        <field name="name">Permiso con Goce</field>
        <field name="sequence" eval="1015" />
        <field name="code">PGG001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
permit = worked_days['LEAVE100'].number_of_days if 'LEAVE100' in worked_days else 0.0
result = contract.l10n_mx_edi_daily_wage * permit
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_paternity" model="hr.salary.rule">
        <field name="name">Permiso de Paternidad</field>
        <field name="sequence" eval="1020" />
        <field name="code">PGP001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
permit = worked_days['LEAVE130'].number_of_days if 'LEAVE130' in worked_days else 0.0
result = contract.l10n_mx_edi_daily_wage * permit
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_public_holiday" model="hr.salary.rule">
        <field name="name">Días Inhábiles Trabajados</field>
        <field name="sequence" eval="1025" />
        <field name="code">DIT</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
daily_wage = contract.l10n_mx_edi_daily_wage
if worked_days.get('LEAVE140'):
    working_schedule = contract.resource_calendar_id
    attendances = payslip._get_attendances()
    date_from, date_to = payslip._get_dates_on_datetime()

    for leave in working_schedule.global_leave_ids.filtered(lambda leave: date_from &lt;= leave.date_from &lt;= date_to):
        for attendance in attendances.filtered(lambda att: leave.date_from &lt;= att.check_in &lt;= leave.date_to):
            result += daily_wage * 2
result += (inputs['dit'].amount * daily_wage * 2) if 'dit' in inputs else 0.0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_public_holiday_simple" model="hr.salary.rule">
        <field name="name">Días de Descanso Trabajados</field>
        <field name="sequence" eval="1026" />
        <field name="code">DDT</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['ddt'].amount * contract.l10n_mx_edi_daily_wage if 'ddt' in inputs else 0.0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_retroactive" model="hr.salary.rule">
        <field name="name">Retroactivo</field>
        <field name="sequence" eval="1027" />
        <field name="code">RET</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">
result = inputs['ret'] if 'ret' in inputs else 0.0
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['ret'].amount if 'ret' in inputs else 0.0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_001_adopcion" model="hr.salary.rule">
        <field name="name">Licencia de Adopción</field>
        <field name="sequence" eval="1030" />
        <field name="code">PGLA001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
permit = worked_days['LEAVE116'].number_of_days if 'LEAVE116' in worked_days else 0.0
result = contract.l10n_mx_edi_daily_wage * permit
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_003_g" model="hr.salary.rule">
        <field name="name">Participación de los Trabajadores en las Utilidades PTU (G)</field>
        <field name="sequence" eval="3001" />
        <field name="code">PG003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['PTU'].amount - PE003 if 'PTU' in inputs else 0.0
        </field>
        <field name="note">Sólo 15 UMAs quedan de exento, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_003_e" model="hr.salary.rule">
        <field name="name">Participación de los Trabajadores en las Utilidades PTU (E)</field>
        <field name="sequence" eval="3000" />
        <field name="code">PE003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['PTU'].amount if 'PTU' in inputs else 0.0
exempt = contract.company_id.l10n_mx_edi_uma * 15
result = exempt if result &gt;= exempt else result
        </field>
        <field name="note">Sólo 15 UMAs quedan de exento, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_004_e" model="hr.salary.rule">
        <field name="name">Reembolso de Gastos Médicos Dentales y Hospitalarios</field>
        <field name="sequence" eval="4000" />
        <field name="code">PE004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_004'].amount if 'pe_004' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_005_e" model="hr.salary.rule">
        <field name="name">Fondo de Ahorro Empresa</field>
        <field name="sequence" eval="5000" />
        <field name="code">PE005</field>
        <field name="l10n_mx_edi_code">005</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pe_005'].amount if 'pe_005' in inputs else 0.0
if contract.company_id.l10n_mx_edi_percentage_saving_fund:
    use_leave_ded = payslip.contract_id.company_id.l10n_mx_edi_use_leave_deduction
    result += contract.company_id.l10n_mx_edi_percentage_saving_fund * (PG001 + PGG001 - IEG006 - IM006 - IRT006 - LPHC006 - (D020 + FJSS if use_leave_ded else 0))
if not contract.company_id.l10n_mx_edi_not_limit_saving_fund:
    days = 1
    if contract.l10n_mx_edi_schedule_pay_id.code ==  '02':
        days = 7
    elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
        days = 14
    elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
        days = 15.2
    elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
        days = 30.4
    elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
        days = 60.8
    elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
        days = 10
    limit = contract.company_id.l10n_mx_edi_uma * 1.3 * days
    result = min(result, limit)
        </field>
        <field name="note">
En México existen dos conceptos similares, la caja de ahorro y el fondo de ahorro.

En el fondo de ahorro el empleado acepta aportar cierta cantidad de dinero, y el patrón aporta la misma cantidad
a un fondo de inversión, cada cierto tiempo, usualmente a final de año, el empleado recibe ambos aportaciones mas
los rendimientos generados por el fondo de inversión.

En la caja de ahorro el empleado acepta aportar cierta cantidad de dinero a un fondo de inversión, dicha retención
o deducción es realizada por el patrón vía nómina, cada cierto tiempo, el empleado recibe la aportación que ha
hecho mas los rendimientos generados por el fondo de inversión.

La diferencia primordial entre cada concepto es que, en el fondo de ahorro, el empleador o patrón aporta cierta
cantidad de dinero, mientras que en la caja de ahorro solo el empleado aporta capital.

Esta regla consiste en la percepción por fondo de ahorro. Sí, necesita deducir el concepto de caja de ahorro,
por favor utilizar la regla salarial Caja de ahorro con el código CJ004.
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_006_e" model="hr.salary.rule">
        <field name="name">Caja de ahorro</field>
        <field name="sequence" eval="6000" />
        <field name="code">PE006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_006'].amount if 'pe_006' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_009_e" model="hr.salary.rule">
        <field name="name">Contribuciones a Cargo del Trabajador Pagadas por el Patrón</field>
        <field name="sequence" eval="9000" />
        <field name="code">PE009</field>
        <field name="l10n_mx_edi_code">009</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_009'].amount if 'pe_009' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_010_g" model="hr.salary.rule">
        <field name="name">Premios por puntualidad (G)</field>
        <field name="sequence" eval="10000" />
        <field name="code">PG010</field>
        <field name="l10n_mx_edi_code">010</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pg_010'].amount if 'pg_010' in inputs else 0.0
absence = worked_days['LEAVE90'].number_of_days if 'LEAVE90' in worked_days else 0.0
if contract.l10n_mx_edi_punctuality_bonus_type == 'percentage':
    use_leave_ded = payslip.contract_id.company_id.l10n_mx_edi_use_leave_deduction
    result += contract.l10n_mx_edi_punctuality_bonus * (PG001 + PGG001 - IEG006 - IM006 - IRT006 - LPHC006 - (D020 + FJSS if use_leave_ded else 0)) / 100 if not absence else 0
else:
    result += contract.l10n_mx_edi_punctuality_bonus if not absence else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_011_g" model="hr.salary.rule">
        <field name="name">Prima de Seguro de vida (G)</field>
        <field name="sequence" eval="11000" />
        <field name="code">PG011</field>
        <field name="l10n_mx_edi_code">011</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_011'].amount if 'pg_011' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_012_e" model="hr.salary.rule">
        <field name="name">Seguro de Gastos Medicos Mayores</field>
        <field name="sequence" eval="12000" />
        <field name="code">PE012</field>
        <field name="l10n_mx_edi_code">012</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_012'].amount if 'pe_012' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_013_e" model="hr.salary.rule">
        <field name="name">Cuotas Sindicales Pagadas por el Patrón</field>
        <field name="sequence" eval="13000" />
        <field name="code">PE013</field>
        <field name="l10n_mx_edi_code">013</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_013'].amount if 'pe_013' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_014_e" model="hr.salary.rule">
        <field name="name">Subsidios por incapacidad</field>
        <field name="sequence" eval="14000" />
        <field name="code">PE014</field>
        <field name="l10n_mx_edi_code">014</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pe_014'].amount if 'pe_014' in inputs else 0.0
sick_leave = worked_days['LEAVE110'].number_of_days if 'LEAVE110' in worked_days else 0.0
if sick_leave:
    result += payslip._get_inability_bonus()
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_015_e" model="hr.salary.rule">
        <field name="name">Becas para trabajadores o hijos</field>
        <field name="sequence" eval="15000" />
        <field name="code">PE015</field>
        <field name="l10n_mx_edi_code">015</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_015'].amount if 'pe_015' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_019_es" model="hr.salary.rule">
        <field name="name">Horas extra simples (E)</field>
        <field name="sequence" eval="19000" />
        <field name="code">PES019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pes_019'].amount if 'pes_019' in inputs else 0.0
sd = contract.l10n_mx_edi_daily_wage
sdh = sd / 8
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
for week in payslip.get_overtime_data(True).values():
    doubles = week['no_paid']
    amount_exempt = doubles * sdh
    if minimum_wage - 0.001 &lt; sd &lt; minimum_wage + 0.001:
        result += amount_exempt
        continue
    result += min((amount_exempt / 2), contract.company_id.l10n_mx_edi_uma * 5)
        </field>
        <field name="note">Si SD &lt;= SM son 9 hr exentas, pero si SD &gt; SM son 2.5 hr exentas</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_019_gs" model="hr.salary.rule">
        <field name="name">Horas extra simples (G)</field>
        <field name="sequence" eval="19000" />
        <field name="code">PGS019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pgs_019'].amount if 'pgs_019' in inputs else 0.0
sd = contract.l10n_mx_edi_daily_wage
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
# Si SD == SM, todas las dobles son exentas
if not (minimum_wage - 0.001 &lt; sd &lt; minimum_wage + 0.001):
    sdh = sd / 8
    for week in payslip.get_overtime_data(True).values():
        doubles = week['no_paid']
        amount_exempt = doubles * sdh
        if amount_exempt / 2 &gt; contract.company_id.l10n_mx_edi_uma * 5:
            result += (contract.company_id.l10n_mx_edi_uma * 5) - amount_exempt if contract.company_id.l10n_mx_edi_uma &gt; amount_exempt else 0
            continue
        result += amount_exempt / 2
        </field>
        <field name="note">Si SD &lt;= SM son 9 hr exentas, pero si SD &gt; SM son 2.5 hr exentas</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_019_e" model="hr.salary.rule">
        <field name="name">Horas extra dobles (E)</field>
        <field name="sequence" eval="19000" />
        <field name="code">PE019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pe_019'].amount if 'pe_019' in inputs else 0.0
sd = contract.l10n_mx_edi_daily_wage
sdh = sd / 8 * 2
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
for week in payslip.get_overtime_data().values():
    if week['paid'] &gt;= 9 or not week['no_paid']:
        # Las horas dobles para esta semana ya se pagaron en la nómina anterior
        continue
    doubles = min(week['no_paid'] + week['paid'], 9)
    doubles_pp = (doubles - week['paid']) if doubles &gt; week['paid'] else 0
    amount_exempt = doubles_pp * sdh
    if minimum_wage - 0.001 &lt; sd &lt; minimum_wage + 0.001:
        result += amount_exempt
        continue
    result += min((amount_exempt / 2), contract.company_id.l10n_mx_edi_uma * 5)
        </field>
        <field name="note">
¿Cómo se consideran las horas extras en el cálculo del ISR?
A continuación, las reglas

Art 93 de LISR

Primera regla: Si el trabajador percibe Salario Mínimo General, hasta por nueve horas extras por semana estará exento.
Segunda regla: Si el trabajador gana más de un Salario Mínimo General, entonces el 50% de las horas extras será gravado
y el otro 50% será exento.
Tercera regla: Esta tercera regla debe tener como paso previo la segunda regla, esta segunda regla a su vez debe
sujetarse a esta tercera regla que dice: si la parte exenta excede el límite de 5 UMA, la parte que exceda será gravada.
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_019_g" model="hr.salary.rule">
        <field name="name">Horas extra dobles (G)</field>
        <field name="sequence" eval="19000" />
        <field name="code">PG019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pg_019'].amount if 'pg_019' in inputs else 0.0
sd = contract.l10n_mx_edi_daily_wage
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
# Si SD == SM, todas las dobles son exentas
if not (minimum_wage - 0.001 &lt; sd &lt; minimum_wage + 0.001):
    sdh = sd / 8 * 2
    for week in payslip.get_overtime_data().values():
        if week['paid'] &gt;= 9 or not week['no_paid']:
            # Las horas dobles para esta semana ya se pagaron en la nómina anterior
            continue
        doubles = min(week['no_paid'] + week['paid'], 9)
        doubles_pp = (doubles - week['paid']) if doubles &gt; week['paid'] else 0
        amount_exempt = doubles_pp * sdh
        if amount_exempt / 2 &gt; contract.company_id.l10n_mx_edi_uma * 5:
            result += amount_exempt - (contract.company_id.l10n_mx_edi_uma * 5)
            continue
        result += amount_exempt / 2
        </field>
        <field name="note">
¿Cómo se consideran las horas extras en el cálculo del ISR?
A continuación, las reglas

Art 93 de LISR

Primera regla: Si el trabajador percibe Salario Mínimo General, hasta por nueve horas extras por semana estará exento.
Segunda regla: Si el trabajador gana más de un Salario Mínimo General, entonces el 50% de las horas extras será gravado
y el otro 50% será exento.
Tercera regla: Esta tercera regla debe tener como paso previo la segunda regla, esta segunda regla a su vez debe
sujetarse a esta tercera regla que dice: si la parte exenta excede el límite de 5 UMA, la parte que exceda será gravada.
Cuarta regla: Por día, solo las 3 primeras horas extra son dobles, a partir de la cuarta hora son triples, las cuales, gravan al 100%
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_019_t" model="hr.salary.rule">
        <field name="name">Horas extra triples</field>
        <field name="sequence" eval="19001" />
        <field name="code">PGT019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="l10n_mx_edi_payslip.payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pgt_019'].amount if 'pgt_019' in inputs else 0.0
sd = contract.l10n_mx_edi_daily_wage
sdh = sd / 8 * 3
for week in payslip.get_overtime_data().values():
    result += (week['triple_no_paid'] - week['triple_paid']) * sdh
    total = week['paid'] + week['no_paid']
    if total &lt;= 9:
        continue
    hours_tp = total - (9 if week['paid'] &lt;= 9 else week['paid'])
    result += hours_tp * sdh
        </field>
        <field name="note">El excedente de 3 horas por día y de 9 horas por semana, es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_020_e" model="hr.salary.rule">
        <field name="name">Prima dominical (E)</field>
        <field name="sequence" eval="20000" />
        <field name="code">PE020</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
# Get How many sundays there is with an attendece
attended_days = payslip._get_attendances_weekdays()
sundays_count = inputs['p_020'].amount if 'p_020' in inputs else 0.0
sundays_count += attended_days.count(6)
sundays_payment = contract.l10n_mx_edi_daily_wage * 0.25 * sundays_count
exempt = contract.company_id.l10n_mx_edi_uma * sundays_count

result = exempt if exempt &lt; sundays_payment else sundays_payment
        </field>
        <field
            name="note"
        >Sólo 1 UMA por cada domingo trabajado es exento, el excedente es gravado. Por favor, instale el módulo de Asistencias para utilizar esta regla.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_020_g" model="hr.salary.rule">
        <field name="name">Prima dominical (G)</field>
        <field name="sequence" eval="20000" />
        <field name="code">PG020</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
# Get How many sundays there is with an attendece
attended_days = payslip._get_attendances_weekdays()
sundays_count = inputs['p_020'].amount if 'p_020' in inputs else 0.0
sundays_count += attended_days.count(6)
sundays_payment = contract.l10n_mx_edi_daily_wage * 0.25 * sundays_count
exempt = contract.company_id.l10n_mx_edi_uma * sundays_count

result = sundays_payment - exempt if sundays_payment &gt; exempt else 0
        </field>
        <field
            name="note"
        >Sólo 1 UMA por cada domingo trabajado es exento, el excedente es gravado. Por favor, instale el módulo de Asistencias para utilizar esta regla.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_021_e" model="hr.salary.rule">
        <field name="name">Prima vacacional (E)</field>
        <field name="sequence" eval="21000" />
        <field name="code">PE021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus = payslip.company_id.l10n_mx_edi_vacation_bonus
holidays = 0
result = inputs['pg_021'].amount if 'pg_021' in inputs else 0.0
if not vacation_bonus or vacation_bonus == 'on_holidays':
    holidays = worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
elif vacation_bonus == 'on_anniversary' and payslip.date_from.month == contract.date_start.month and payslip.date_from.year != contract.date_start.year and payslip.date_from.day &lt;= contract.date_start.day &lt;= payslip.date_to.day:
    holidays = contract.l10n_mx_edi_holidays
if holidays:
    result += contract.l10n_mx_edi_daily_wage * holidays * contract.l10n_mx_edi_vacation_bonus / 100

# Nominas del empleado del año actual
payslips = employee.slip_ids.filtered(lambda sl: sl.state == 'done' and sl.id != payslip.id and sl.date_from.year == payslip.date_from.year)
lines = payslips.mapped('line_ids')
accumulated = sum(lines.filtered(lambda li: li.salary_rule_id.code == 'PE021').mapped('total'))

exempt = (contract.company_id.l10n_mx_edi_uma * 15) - accumulated
if result:
    result = max(exempt if result >= exempt else result, 0)
        </field>
        <field name="note">Sólo 15 UMAs son exentos al año, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_021_g" model="hr.salary.rule">
        <field name="name">Prima vacacional (G)</field>
        <field name="sequence" eval="21000" />
        <field name="code">PG021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus = payslip.company_id.l10n_mx_edi_vacation_bonus
holidays = 0
result = inputs['pg_021'].amount if 'pg_021' in inputs else 0.0
if not vacation_bonus or vacation_bonus == 'on_holidays':
    holidays = worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
elif vacation_bonus == 'on_anniversary' and payslip.date_from.month == contract.date_start.month and payslip.date_from.year != contract.date_start.year and payslip.date_from.day &lt;= contract.date_start.day &lt;= payslip.date_to.day:
    holidays = contract.l10n_mx_edi_holidays
if holidays:
    result += contract.l10n_mx_edi_daily_wage * holidays * contract.l10n_mx_edi_vacation_bonus / 100

if result:
    result -= PE021
        </field>
        <field name="note">Sólo 15 UMAs son exentos al año, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_024_e" model="hr.salary.rule">
        <field name="name">Seguro de retiro (E)</field>
        <field name="sequence" eval="24000" />
        <field name="code">PE024</field>
        <field name="l10n_mx_edi_code">024</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_024'].amount if 'pe_024' in inputs else 0.0</field>
        <field name="note">Sólo 90 SM por año trabajado es exento, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_024_g" model="hr.salary.rule">
        <field name="name">Seguro de retiro (G)</field>
        <field name="sequence" eval="24000" />
        <field name="code">PG024</field>
        <field name="l10n_mx_edi_code">024</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_024'].amount if 'pg_024' in inputs else 0.0</field>
        <field name="note">Sólo 90 SM por año trabajado es exento, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_026_e" model="hr.salary.rule">
        <field name="name">Reembolso por funeral</field>
        <field name="sequence" eval="26000" />
        <field name="code">PE026</field>
        <field name="l10n_mx_edi_code">026</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_026'].amount if 'pe_026' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_027_e" model="hr.salary.rule">
        <field name="name">Cuotas de seguridad social pagadas por el patrón</field>
        <field name="sequence" eval="54100" />
        <field name="code">PE027</field>
        <field name="l10n_mx_edi_code">027</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pe_027'].amount if 'pe_027' in inputs else 0.0
if contract.company_id.l10n_mx_edi_subsidy_imss:
    minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
    # If employee's Salary is the minimal. The 0.001 is a rounding margin
    if contract.l10n_mx_edi_daily_wage &lt;= minimum_wage + 0.001:
        result = SS001
        </field>
        <field name="note">
Las cuotas por seguridad social, también conocidas como cuotas del IMSS son cuotas obrero-patronales, es decir, el trabajador paga una parte y el empleador la otra.

Aunque no es obligatorio, el patrón puede decidir pagar o subsidiar la cuota del empleado también con el fin de apoyar al mismo, esto se logra agregando una percepción no gravada al pago de nómina con el código del SAT 027.

De esta manera, el patrón le paga al empleado y el empleado paga la cuota, el salario neto del empleado queda intacto y para el seguro social ambas entidades realizaron su pago.

Una práctica común es realizar este subsidio de seguridad social a aquellos empleados que reciben el salario mínimo, si se desea que el subsidio se realice de manera automática cuando el empleado recibe el salario mínimo, siga las siguientes instrucciones:

1. Ingrese en el módulo de Nómina
2. Ingrese en Opciones generales
3. Localice a la sección de “Nómina mexicana”
4. Busque y seleccione la opción ¿Subsidiar Seguridad Social?
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_028_g" model="hr.salary.rule">
        <field name="name">Comisiones</field>
        <field name="sequence" eval="28000" />
        <field name="code">PG028</field>
        <field name="l10n_mx_edi_code">028</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_028'].amount if 'pg_028' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_029_base" model="hr.salary.rule">
        <field name="name">Base para vales de despensa</field>
        <field name="sequence" eval="29000" />
        <field name="code">BVD</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = (inputs['p_029'].amount if 'p_029' in inputs else 0.0) + contract.l10n_mx_edi_food_voucher
        </field>
        <field name="note">Esta regla puede ser sobreescrita de acuerdo a las políticas de cada cliente.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_029_e" model="hr.salary.rule">
        <field name="name">Vales de despensa (E)</field>
        <field name="sequence" eval="29001" />
        <field name="code">PE029</field>
        <field name="l10n_mx_edi_code">029</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
result = minimum_wage * 7 if BVD >= (minimum_wage * 7) else BVD
        </field>
        <field
            name="note"
        >Sólo mediante monedero del SAT son 7 SM elevado al año como importe exento, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_029_g" model="hr.salary.rule">
        <field name="name">Vales de despensa (G)</field>
        <field name="sequence" eval="29001" />
        <field name="code">PG029</field>
        <field name="l10n_mx_edi_code">029</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
result = BVD - minimum_wage * 7 if BVD >= minimum_wage * 7 else 0
        </field>
        <field
            name="note"
        >Sólo mediante monedero del SAT son 7 SM elevado al año como importe exento, el excedente es gravado</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_030_g" model="hr.salary.rule">
        <field name="name">Vales de restaurante</field>
        <field name="sequence" eval="30000" />
        <field name="code">PG030</field>
        <field name="l10n_mx_edi_code">030</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_030'].amount if 'pg_030' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_031_e" model="hr.salary.rule">
        <field name="name">Vales de gasolina (E)</field>
        <field name="sequence" eval="31000" />
        <field name="code">PE031</field>
        <field name="l10n_mx_edi_code">031</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_031'].amount if 'pe_031' in inputs else 0.0</field>
        <field name="note">Sólo si están a nombre de la dependencia</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_031_g" model="hr.salary.rule">
        <field name="name">Vales de gasolina (G)</field>
        <field name="sequence" eval="31000" />
        <field name="code">PG031</field>
        <field name="l10n_mx_edi_code">031</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_031'].amount if 'pg_031' in inputs else 0.0</field>
        <field name="note">Sólo si están a nombre de la dependencia</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_032_g" model="hr.salary.rule">
        <field name="name">Vales de ropa</field>
        <field name="sequence" eval="32000" />
        <field name="code">PG032</field>
        <field name="l10n_mx_edi_code">032</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_032'].amount if 'pg_032' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_033_g" model="hr.salary.rule">
        <field name="name">Ayuda para renta</field>
        <field name="sequence" eval="33000" />
        <field name="code">PG033</field>
        <field name="l10n_mx_edi_code">033</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_033'].amount if 'pg_033' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_034_g" model="hr.salary.rule">
        <field name="name">Ayuda para artículos escolares</field>
        <field name="sequence" eval="34000" />
        <field name="code">PG034</field>
        <field name="l10n_mx_edi_code">034</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_034'].amount if 'pg_034' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_035_g" model="hr.salary.rule">
        <field name="name">Ayuda para anteojos</field>
        <field name="sequence" eval="35000" />
        <field name="code">PG035</field>
        <field name="l10n_mx_edi_code">035</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_035'].amount if 'pg_035' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_036_e" model="hr.salary.rule">
        <field name="name">Ayuda para transporte (E)</field>
        <field name="sequence" eval="36000" />
        <field name="code">PE036</field>
        <field name="l10n_mx_edi_code">036</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_036'].amount if 'pe_036' in inputs else 0.0</field>
        <field name="note">Si es vehículo de la empresa se exenta</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_036_g" model="hr.salary.rule">
        <field name="name">Ayuda para transporte (G)</field>
        <field name="sequence" eval="36000" />
        <field name="code">PG036</field>
        <field name="l10n_mx_edi_code">036</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_036'].amount if 'pg_036' in inputs else 0.0</field>
        <field name="note">Si es vehículo de la empresa se exenta</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_037_e" model="hr.salary.rule">
        <field name="name">Ayuda para gastos de funeral</field>
        <field name="sequence" eval="37000" />
        <field name="code">PE037</field>
        <field name="l10n_mx_edi_code">037</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_037'].amount if 'pe_037' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_038_g" model="hr.salary.rule">
        <field name="name">Otros ingresos por salarios</field>
        <field name="sequence" eval="38000" />
        <field name="code">PG038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_038'].amount if 'pg_038' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_productivity_g" model="hr.salary.rule">
        <field name="name">Bono por Productividad</field>
        <field name="sequence" eval="38010" />
        <field name="code">PG1038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="l10n_mx_edi_sdi_variable" eval="True" />
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pgpe_038'].amount if 'pgpe_038' in inputs else 0.0
if not worked_days.get('LEAVE90') and payslip.payslip_run_id.l10n_mx_edi_productivity_bonus:
    slips = payslip.payslip_run_id.slip_ids.filtered(lambda sl: 'LEAVE90' not in sl.worked_days_line_ids.mapped('code'))
    result += payslip.payslip_run_id.l10n_mx_edi_productivity_bonus / len(slips)
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_seventh_day_g" model="hr.salary.rule">
        <field name="name">Séptimo dia</field>
        <field name="sequence" eval="38040" />
        <field name="code">SD038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
daily_payment = contract.l10n_mx_edi_daily_wage
# get which days employee works
working_days = employee.resource_calendar_id.attendance_ids.mapped('dayofweek')
attended_days = payslip._get_attendances_weekdays()

result = (daily_payment * 2) * inputs['p_020'].amount if 'p_020' in inputs else 0.0

for day in attended_days:
    # Casting day, contract.l10n_mx_edi_day_off is a string weekday
    day = str(day)

    if contract.l10n_mx_edi_day_off:
        if day == contract.l10n_mx_edi_day_off:
            result += (daily_payment * 2) if day == '6' else daily_payment

    elif not day in working_days:
        result += (daily_payment * 2) if day == '6' else daily_payment
        </field>
        <field name="note">Por favor, instale el módulo de Asistencias para utilizar esta regla.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_039_e" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro (E)</field>
        <field name="sequence" eval="39000" />
        <field name="code">PE039</field>
        <field name="l10n_mx_edi_code">039</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_039'].amount if 'pe_039' in inputs else 0.0</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_039_g" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro (G)</field>
        <field name="sequence" eval="39000" />
        <field name="code">PG039</field>
        <field name="l10n_mx_edi_code">039</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_039'].amount if 'pg_039' in inputs else 0.0</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_044_e" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro en parcialidades (E)</field>
        <field name="sequence" eval="44000" />
        <field name="code">PE044</field>
        <field name="l10n_mx_edi_code">044</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_044'].amount if 'pe_044' in inputs else 0.0</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_044_g" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro en parcialidades (G)</field>
        <field name="sequence" eval="44000" />
        <field name="code">PG044</field>
        <field name="l10n_mx_edi_code">044</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_044'].amount if 'pg_044' in inputs else 0.0</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_045_e" model="hr.salary.rule">
        <field name="name">Ingresos en acciones o títulos valor que representan bienes (E)</field>
        <field name="sequence" eval="45000" />
        <field name="code">PE045</field>
        <field name="l10n_mx_edi_code">045</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_045'].amount if 'pe_045' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_045_g" model="hr.salary.rule">
        <field name="name">Ingresos en acciones o títulos valor que representan bienes (G)</field>
        <field name="sequence" eval="45000" />
        <field name="code">PG045</field>
        <field name="l10n_mx_edi_code">045</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_045'].amount if 'pg_045' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_046_g" model="hr.salary.rule">
        <field name="name">Ingresos asimilados a salarios</field>
        <field name="sequence" eval="46000" />
        <field name="code">PG046</field>
        <field name="l10n_mx_edi_code">046</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = employee.l10n_mx_edi_is_assimilated</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# In case commission or raised price
holidays = worked_days['HOLIDAYS'].number_of_days if 'HOLIDAYS' in worked_days else 0.0
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
    result = contract.l10n_mx_edi_daily_wage - holidays
elif contract.l10n_mx_edi_schedule_pay_id.code ==  '02':
    result = contract.l10n_mx_edi_daily_wage * (7 - holidays)
elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
    result = contract.l10n_mx_edi_daily_wage * (14 - holidays)
elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
    result = contract.l10n_mx_edi_daily_wage * (15 - holidays)
elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
    result = contract.l10n_mx_edi_daily_wage * (30 - holidays)
elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
    result = contract.l10n_mx_edi_daily_wage * (60 - holidays)
elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
    result = contract.l10n_mx_edi_daily_wage * (10 - holidays)
result -= DNL004
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_047_e" model="hr.salary.rule">
        <field name="name">Alimentación (E)</field>
        <field name="sequence" eval="47000" />
        <field name="code">PE047</field>
        <field name="l10n_mx_edi_code">047</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">
result = contract.company_id.l10n_mx_edi_company_feeding
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
feeding = contract.l10n_mx_edi_feeding
if contract.l10n_mx_edi_feeding_type == 'percentage':
    feeding = feeding / 100 * contract.company_id.l10n_mx_edi_uma
days = inputs['pe_047'].amount if 'pe_047' in inputs else 0.0
amount_daily = (feeding * 1.16) - (feeding / 2)
result = amount_daily * days
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_047_g" model="hr.salary.rule">
        <field name="name">Alimentación (G)</field>
        <field name="sequence" eval="47000" />
        <field name="code">PG047</field>
        <field name="l10n_mx_edi_code">047</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_047'].amount if 'pg_047' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_048_e" model="hr.salary.rule">
        <field name="name">Habitación (E)</field>
        <field name="sequence" eval="48000" />
        <field name="code">PE048</field>
        <field name="l10n_mx_edi_code">048</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.l10n_mx_edi_housing_type</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pe_048'].amount if 'pe_048' in inputs else 0.0
days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
uma = contract.company_id.l10n_mx_edi_uma
result += PG001 * contract.l10n_mx_edi_housing / 100 if contract.l10n_mx_edi_housing_type == 'percentage' else contract.l10n_mx_edi_housing
        </field>
        <field name="note">
De conformidad a lo señalado en el numeral 27, fracción V de la LSS la ayuda para renta queda excluida del SBC de su
trabajador cuando este pague a su patrón por su otorgamiento al menos el 20 % del salario mínimo general vigente (SMGV).
Por ello, para aprovechar el beneficio de la ley deberán retener a su subordinado el importe mencionado.

Adicionalmente es necesario que la prestación esté registrada en su contabilidad, por lo que se recomienda que en el
recibo de nómina que se le expida esté previsto tanto su otorgamiento como el descuento realizado a su salario
(art. 27, último párrafo, LSS).

Igualmente se recomienda que la prestación se otorgue según las políticas empresariales respectivas, por ejemplo que
el director general acredite el destino de la ayuda si esta se da en efectivo.

Finalmente debe considerar que para efectos fiscales los salarios más la previsión social no debe exceder del
equivalente a siete veces la Unidad de Medida y Actualización (UMA), pues de lo contrario solo se exenta por
previsión social hasta una UMA anual (art. 93, penúltimo párrafo, LISR).
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_048_g" model="hr.salary.rule">
        <field name="name">Habitación (G)</field>
        <field name="sequence" eval="48000" />
        <field name="code">PG048</field>
        <field name="l10n_mx_edi_code">048</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_048'].amount if 'pg_048' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_049_g" model="hr.salary.rule">
        <field name="name">Premios por asistencia</field>
        <field name="sequence" eval="49000" />
        <field name="code">PG049</field>
        <field name="l10n_mx_edi_code">049</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['pg_049'].amount if 'pg_049' in inputs else 0.0
absence = worked_days['LEAVE90'].number_of_days if 'LEAVE90' in worked_days else 0.0
if contract.l10n_mx_edi_attendance_bonus_type == 'percentage':
    use_leave_ded = payslip.contract_id.company_id.l10n_mx_edi_use_leave_deduction
    result += contract.l10n_mx_edi_attendance_bonus * (PG001 + PGG001 - IEG006 - IM006 - IRT006 - LPHC006 - (D020 + FJSS if use_leave_ded else 0)) / 100 if not absence else 0
else:
    result += contract.l10n_mx_edi_attendance_bonus if not absence else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_050_e" model="hr.salary.rule">
        <field name="name">Viáticos (E)</field>
        <field name="sequence" eval="50000" />
        <field name="code">PE050</field>
        <field name="l10n_mx_edi_code">050</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pe_050'].amount if 'pe_050' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_050_g" model="hr.salary.rule">
        <field name="name">Viáticos (G)</field>
        <field name="sequence" eval="50000" />
        <field name="code">PG050</field>
        <field name="l10n_mx_edi_code">050</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_050'].amount if 'pg_050' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_051_g" model="hr.salary.rule">
        <field
            name="name"
        >Pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades</field>
        <field name="sequence" eval="51000" />
        <field name="code">PG051</field>
        <field name="l10n_mx_edi_code">051</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_051'].amount if 'pg_051' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_052_g" model="hr.salary.rule">
        <field
            name="name"
        >Pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de resoluciones judicial o de un laudo</field>
        <field name="sequence" eval="52000" />
        <field name="code">PG052</field>
        <field name="l10n_mx_edi_code">052</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_052'].amount if 'pg_052' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_perception_053_g" model="hr.salary.rule">
        <field
            name="name"
        >Pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de resoluciones judicial o de un laudo</field>
        <field name="sequence" eval="53000" />
        <field name="code">PG053</field>
        <field name="l10n_mx_edi_code">053</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['pg_053'].amount if 'pg_053' in inputs else 0.0</field>
    </record>

    <!-- Deductions -->
    <record id="hr_rule_l10n_mx_payroll_deduction_001" model="hr.salary.rule">
        <field name="name">Seguridad social</field>
        <field name="sequence" eval="54000" />
        <field name="code">SS001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    sbc = contract.l10n_mx_edi_sbc
    uma = contract.company_id.l10n_mx_edi_uma
    # Asistencia
    days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
    # Vacaciones
    days_work = worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
    # Feriado
    days_work += worked_days['LEAVE140'].number_of_days if 'LEAVE140' in worked_days else 0.0
    # Generic Time Off
    days_work += worked_days['LEAVE100'].number_of_days if 'LEAVE100' in worked_days else 0.0
    # Licencia de adopción
    days_work += worked_days['LEAVE116'].number_of_days if 'LEAVE116' in worked_days else 0.0
    work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
    holiday_days_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
    # Vacaciones no disfrutadas
    days_work += holiday_days_not_enjoyed
    # Faltas
    leaves = worked_days['LEAVE90'].number_of_days if 'LEAVE90' in worked_days else 0.0
    # Falta justificada sin goce de salario
    leaves += worked_days['LEAVE114'].number_of_days if 'LEAVE114' in worked_days else 0.0
    # Licencia sin goce de salario
    leaves += worked_days['LEAVE115'].number_of_days if 'LEAVE115' in worked_days else 0.0
    specie_excess = ((sbc - (uma * 3)) * 0.004 * (days_work + leaves)) if (sbc - (uma * 3)) &gt; 0 else 0  # Especie - Excedente
    benefits = 0.0025 * sbc * (days_work + leaves)  # Enfermedades y maternidad en dinero
    pensioners = 0.00375 * sbc * (days_work + leaves)  # Gastos médicos para pensionados y beneficiarios
    disability = 0.00625 * sbc * days_work  # Invalides y vida
    unemployment = 0.01125 * sbc * days_work  # Retiro, Cesantía en Edad Avanzada y Vejez
    result = specie_excess + benefits + pensioners + disability + unemployment
    if not days_work:
        result = 0
        </field>
        <field name="note">
Sumatoria de primas para cuotas obrero.

Las incapacidades no se consideran para este calculo.

Nota: El IMSS cobra en el segundo mes del bimestre el monto por Retiro, Cesantía en Edad Avanzada y Vejez,
lo manejamos nosotros en todas las nóminas para que se prorratee y no se descuente todo en la misma quincena.

Especie - Excedente: Considera los días del periodo - incapacidades
Enfermedades y maternidad en dinero: Considera los días del periodo - incapacidades
Gastos médicos para pensionados y beneficiarios: Considera los días del periodo - incapacidades
Invalides y vida: Considera los días del periodo: Considera los días del periodo - incapacidades - Faltas
Retiro, Cesantía en Edad Avanzada y Vejez: Considera los días del periodo - incapacidades - Faltas
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_003" model="hr.salary.rule">
        <field name="name">Aportaciones a retiro, cesantía en edad avanzada y vejez</field>
        <field name="sequence" eval="56000" />
        <field name="code">003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_003'].amount if 'd_003' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_004" model="hr.salary.rule">
        <field name="name">Otros</field>
        <field name="sequence" eval="57000" />
        <field name="code">004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_004'].amount if 'd_004' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_004_internal_discount" model="hr.salary.rule">
        <field name="name">Descuento Interno</field>
        <field name="sequence" eval="57001" />
        <field name="code">DDI004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['ddi_004'].amount if 'ddi_004' in inputs else 0.0 or 0.0
for loan in payslip.get_loans('ddi_004'):
    if contract.l10n_mx_edi_schedule_pay_id.code ==  '01':
        result += contract.l10n_mx_edi_daily_wage
    elif contract.l10n_mx_edi_schedule_pay_id.code ==  '02':
        result += contract.l10n_mx_edi_daily_wage * 7
    elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
        result += contract.l10n_mx_edi_daily_wage * 14
    elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
        result += contract.l10n_mx_edi_daily_wage * 15
    elif contract.l10n_mx_edi_schedule_pay_id.code == '05':
        result += amount
    elif contract.l10n_mx_edi_schedule_pay_id.code == '06':
        result += amount * 2
    elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
        result += contract.l10n_mx_edi_daily_wage * 10
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_004_loan_company" model="hr.salary.rule">
        <field name="name">Prestamo Compañía</field>
        <field name="sequence" eval="900001" />
        <field name="code">DPC004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['dpc_004'].amount if 'dpc_004' in inputs else 0.0 or 0.0
net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
result += sum(payslip.get_loans('dpc_004').mapped('amount'))
result = result if net_salary > result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_annual_provision_004" model="hr.salary.rule">
        <field name="name">Provisión Anual ISR de aguinaldo</field>
        <field name="sequence" eval="57004" />
        <field name="code">PA004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">
result = contract.l10n_mx_edi_chrismas_bonus_amortization
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# income_period
daily_wage = contract.wage/30
days = contract._get_days_in_current_period(payslip.date_to, start_year=True)
aguinaldo = daily_wage * (contract.l10n_mx_edi_christmas_bonus or 15) / 365 * days
aguinaldo_exempt = 30 * contract.company_id.l10n_mx_edi_uma
income_period = aguinaldo - aguinaldo_exempt if aguinaldo > aguinaldo_exempt else 0

############## Basado en la ley 174 de ISR
table = [(0.01, 578.52, 0.00, 0.0192), (578.53, 4910.18, 11.11, 0.0640),
        (4910.19, 8629.20, 288.33, 0.1088), (8629.21, 10031.07, 692.96, 0.1600),
        (10031.08, 12009.94, 917.26, 0.1792), (12009.95, 24222.31, 1271.87, 0.2136),
        (24222.32, 38177.69, 3880.44, 0.2352), (38177.70, 72887.50, 7162.74, 0.3000),
        (72887.51, 97183.33, 17575.69, 0.3200), (97183.34, 291550.00, 25350.35, 0.3400),
        (291550.01, 999999999, 91435.02, 0.3500)]

wage = contract.wage

# ISR calculate
year = payslip.l10n_mx_edi_payment_date.year
days_year = 365
if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    days_year = 366

art_174_lisr = income_period / days_year * 30.4
base_gravable = art_174_lisr + wage

result1 = result2 = 0

for value in table:
    if base_gravable >=value[0] and value[1] >= base_gravable:
        result1 = (((base_gravable - value[0]) * value[3]) + value[2]) * -1

for value in table:
    if wage >=value[0] and value[1] >= wage:
        result2 = (((wage - value[0]) * value[3]) + value[2]) * -1

isr = result2 - result1
efective_rate = (isr / art_174_lisr) if art_174_lisr else 0
result = income_period * efective_rate - 1145.45
result = efective_rate
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_004_faemp" model="hr.salary.rule">
        <field name="name">Fondo de Ahorro Empleado</field>
        <field name="sequence" eval="57004" />
        <field name="code">FAE</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = PE005
        </field>
        <field name="note">
En México existen dos conceptos similares, la caja de ahorro y el fondo de ahorro.

En el fondo de ahorro el empleado acepta aportar cierta cantidad de dinero, y el patrón aporta la misma cantidad
a un fondo de inversión, cada cierto tiempo, usualmente a final de año, el empleado recibe ambos aportaciones mas
los rendimientos generados por el fondo de inversión.

En la caja de ahorro el empleado acepta aportar cierta cantidad de dinero a un fondo de inversión, dicha retención
o deducción es realizada por el patrón vía nómina, cada cierto tiempo, el empleado recibe la aportación que ha
hecho mas los rendimientos generados por el fondo de inversión.

La diferencia primordial entre cada concepto es que, en el fondo de ahorro, el empleador o patrón aporta cierta
cantidad de dinero, mientras que en la caja de ahorro solo el empleado aporta capital.

Esta regla consiste en la deducción por caja de ahorro. Sí, necesita deducir el concepto de fondo de ahorro,
porfavor utilizar la regla salarial Fondo de Ahorro con el código PE005.

Esta regla consiste en la deducción por fondo de ahorro. Sí, necesita deducir el concepto de caja de ahorro,
por favor utilizar la regla salarial Caja de ahorro con el código CJ004.
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_004_facomp" model="hr.salary.rule">
        <field name="name">Fondo de Ahorro Empresa</field>
        <field name="sequence" eval="57004" />
        <field name="code">FAC</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = PE005
        </field>
        <field name="note">
En México existen dos conceptos similares, la caja de ahorro y el fondo de ahorro.

En el fondo de ahorro el empleado acepta aportar cierta cantidad de dinero, y el patrón aporta la misma cantidad
a un fondo de inversión, cada cierto tiempo, usualmente a final de año, el empleado recibe ambos aportaciones mas
los rendimientos generados por el fondo de inversión.

En la caja de ahorro el empleado acepta aportar cierta cantidad de dinero a un fondo de inversión, dicha retención
o deducción es realizada por el patrón vía nómina, cada cierto tiempo, el empleado recibe la aportación que ha
hecho mas los rendimientos generados por el fondo de inversión.

La diferencia primordial entre cada concepto es que, en el fondo de ahorro, el empleador o patrón aporta cierta
cantidad de dinero, mientras que en la caja de ahorro solo el empleado aporta capital.

Esta regla consiste en la deducción por fondo de ahorro. Sí, necesita deducir el concepto de caja de ahorro,
por favor utilizar la regla salarial Caja de ahorro con el código CJ004.
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_alimentation" model="hr.salary.rule">
        <field name="name">Alimentación Patron</field>
        <field name="sequence" eval="57001" />
        <field name="code">DAP004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">
result = contract.company_id.l10n_mx_edi_company_feeding
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = PE047
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_alimentation_t" model="hr.salary.rule">
        <field name="name">Alimentación Trabajador</field>
        <field name="sequence" eval="57002" />
        <field name="code">DAT004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# TODO - Get days from attendances
days = inputs['pe_047'].amount if 'pe_047' in inputs else 0.0
feeding = contract.l10n_mx_edi_feeding
if contract.l10n_mx_edi_feeding_type == 'percentage':
    feeding = feeding / 100 * contract.company_id.l10n_mx_edi_uma
if contract.company_id.l10n_mx_edi_company_feeding:
    # 50% del monto en el contrato
    result = (feeding / 2) * days
else:
    result = feeding * days
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_car_insurance" model="hr.salary.rule">
        <field name="name">Seguro Vehículo Personal</field>
        <field name="sequence" eval="57003" />
        <field name="code">SVP004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
for loan in payslip.get_loans('svp_004'):
    result += loan.amount
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_out_contract" model="hr.salary.rule">
        <field name="name">Días no Laborados</field>
        <field name="sequence" eval="2" />
        <field name="code">DNL004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = (worked_days['OUT'].number_of_days if 'OUT' in worked_days else 0.0) * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_electronic_food_voucher" model="hr.salary.rule">
        <field name="name">Vales Electronicos de Despensa</field>
        <field name="sequence" eval="57005" />
        <field name="code">VED</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.company_id.l10n_mx_edi_electronic_food_voucher</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = BVD</field>
    </record>

    <record id="hr_payslip_input_type_deduction_004_housing" model="hr.salary.rule">
        <field name="name">Descuento Habitación</field>
        <field name="sequence" eval="57006" />
        <field name="code">DH004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.l10n_mx_edi_housing_type</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
uma = contract.company_id.l10n_mx_edi_uma
result = days_work * uma * 0.20 if contract.l10n_mx_edi_housing_type == 'percentage' else 0
        </field>
        <field name="note">
De conformidad a lo señalado en el numeral 27, fracción V de la LSS la ayuda para renta queda excluida del SBC de su
trabajador cuando este pague a su patrón por su otorgamiento al menos el 20 % del salario mínimo general vigente (SMGV).
Por ello, para aprovechar el beneficio de la ley deberán retener a su subordinado el importe mencionado.

Adicionalmente es necesario que la prestación esté registrada en su contabilidad, por lo que se recomienda que en el
recibo de nómina que se le expida esté previsto tanto su otorgamiento como el descuento realizado a su salario
(art. 27, último párrafo, LSS).

Igualmente se recomienda que la prestación se otorgue según las políticas empresariales respectivas, por ejemplo que
el director general acredite el destino de la ayuda si esta se da en efectivo.

Finalmente debe considerar que para efectos fiscales los salarios más la previsión social no debe exceder del
equivalente a siete veces la Unidad de Medida y Actualización (UMA), pues de lo contrario solo se exenta por
previsión social hasta una UMA anual (art. 93, penúltimo párrafo, LISR).
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_caja_ahorro_004" model="hr.salary.rule">
        <field name="name">Caja de ahorro</field>
        <field name="sequence" eval="57007" />
        <field name="code">CJ004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['cj_004'].amount if 'cj_004' in inputs else 0.0</field>
        <field name="note">
En México existen dos conceptos similares, la caja de ahorro y el fondo de ahorro.

En el fondo de ahorro el empleado acepta aportar cierta cantidad de dinero, y el patrón aporta la misma cantidad
a un fondo de inversión, cada cierto tiempo, usualmente a final de año, el empleado recibe ambos aportaciones mas
los rendimientos generados por el fondo de inversión.

En la caja de ahorro el empleado acepta aportar cierta cantidad de dinero a un fondo de inversión, dicha retención
o deducción es realizada por el patrón vía nómina, cada cierto tiempo, el empleado recibe la aportación que ha
hecho mas los rendimientos generados por el fondo de inversión.

La diferencia primordial entre cada concepto es que, en el fondo de ahorro, el empleador o patrón aporta cierta
cantidad de dinero, mientras que en la caja de ahorro solo el empleado aporta capital.

Esta regla consiste en la deducción por caja de ahorro. Sí, necesita deducir el concepto de fondo de ahorro,
porfavor utilizar la regla salarial Fondo de Ahorro con el código PE005.
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_005" model="hr.salary.rule">
        <field name="name">Aportaciones a Fondo de vivienda</field>
        <field name="sequence" eval="58000" />
        <field name="code">005</field>
        <field name="l10n_mx_edi_code">005</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_005'].amount if 'd_005' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_006" model="hr.salary.rule">
        <field name="name">Incapacidad Enfermedad General</field>
        <field name="sequence" eval="1005" />
        <field name="code">IEG006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# 3 días son pagados al 100, el resto como subsidio
result = 0
if worked_days.get('LEAVE110'):
    sick_leave = worked_days['LEAVE110'].number_of_days or 0.0
    if contract.company_id.l10n_mx_edi_subsidy_sick_leaves:
        sick_leave = (sick_leave - payslip._get_inability_bonus(True)) if sick_leave > 3 else 0
    result = sick_leave * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_006_im" model="hr.salary.rule">
        <field name="name">Incapacidad Maternidad</field>
        <field name="sequence" eval="1006" />
        <field name="code">IM006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if worked_days.get('LEAVE111'):
    sick_leave = worked_days['LEAVE111'].number_of_days or 0.0
    result = sick_leave * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_006_irt" model="hr.salary.rule">
        <field name="name">Incapacidad Riesgo de Trabajo</field>
        <field name="sequence" eval="1007" />
        <field name="code">IRT006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if worked_days.get('LEAVE112'):
    sick_leave = worked_days['LEAVE112'].number_of_days or 0.0
    result = sick_leave * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_006_lphc" model="hr.salary.rule">
        <field name="name">Licencia para Padres con Hijos con Cancer</field>
        <field name="sequence" eval="1008" />
        <field name="code">LPHC006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if worked_days.get('LEAVE113'):
    sick_leave = worked_days['LEAVE113'].number_of_days or 0.0
    result = sick_leave * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_006_fjss" model="hr.salary.rule">
        <field name="name">Falta Justificada Sin Goce de Salario</field>
        <field name="sequence" eval="1009" />
        <field name="code">FJSS</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.company_id.l10n_mx_edi_use_leave_deduction</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
leaves = (worked_days['LEAVE114'].number_of_days * worked_days['LEAVE114'].work_entry_type_id.l10n_mx_edi_factor) if 'LEAVE114' in worked_days else 0.0
leaves += (worked_days['LEAVE115'].number_of_days * worked_days['LEAVE115'].work_entry_type_id.l10n_mx_edi_factor) if 'LEAVE115' in worked_days else 0.0
result = leaves * contract.l10n_mx_edi_daily_wage
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="sequence" eval="910000" />
        <field name="code">A007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony:
    alimony = alimony[0]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007_b" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 2</field>
        <field name="sequence" eval="910001" />
        <field name="code">B007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 1:
    alimony = alimony[1]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007_c" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 3</field>
        <field name="sequence" eval="910002" />
        <field name="code">C007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 2:
    alimony = alimony[2]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007_d" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 4</field>
        <field name="sequence" eval="910003" />
        <field name="code">D007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 3:
    alimony = alimony[3]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007_e" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 5</field>
        <field name="sequence" eval="910004" />
        <field name="code">E007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 4:
    alimony = alimony[4]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007_f" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 6</field>
        <field name="sequence" eval="910005" />
        <field name="code">F007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 5:
    alimony = alimony[5]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_007_g" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 7</field>
        <field name="sequence" eval="910006" />
        <field name="code">G007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 6:
    alimony = alimony[6]
    if alimony.discount_type == 'percentage_wage':
        result += (PG001 + PGG001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] + categories['OTHER'] - categories['DED']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE']) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages_ss':
        result += (categories['PERGRA'] - PE005 + categories['PEREXE'] - ISR002 - ISR174 - INF009 - SINF009 - SS001) * alimony.discount_amount / 100
    net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
    result = result if net_salary &gt;= result else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_008" model="hr.salary.rule">
        <field name="name">Renta</field>
        <field name="sequence" eval="61000" />
        <field name="code">008</field>
        <field name="l10n_mx_edi_code">008</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_008'].amount if 'd_008' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_009" model="hr.salary.rule">
        <field name="name">Préstamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores</field>
        <field name="sequence" eval="62000" />
        <field name="code">INF009</field>
        <field name="l10n_mx_edi_code">009</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['inf_009'].amount if 'inf_009' in inputs else 0.0 or 0.0
days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
days_work += worked_days['LEAVE90'].number_of_days if 'LEAVE90' in worked_days else 0.0
days_work += worked_days['LEAVE100'].number_of_days if 'LEAVE100' in worked_days else 0.0
days_work += worked_days['LEAVE116'].number_of_days if 'LEAVE116' in worked_days else 0.0
days_work += worked_days['LEAVE114'].number_of_days if 'LEAVE114' in worked_days else 0.0
days_work += worked_days['LEAVE115'].number_of_days if 'LEAVE115' in worked_days else 0.0
days_work += worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
days_work += worked_days['LEAVE140'].number_of_days if 'LEAVE140' in worked_days else 0.0
date = payslip.date_from
leap_year = date.year % 4 == 0 and date.year % 100 != 0 or date.year % 400 == 0
period = {1: 59 if not leap_year else 60, 2: 59 if not leap_year else 60, 7: 62, 8: 62}
for loan in payslip.get_loans('inf_009'):
    date_from = max(payslip.date_from, loan.date_from) if loan.date_from else payslip.date_from
    date_to = min(payslip.date_to, loan.date_to) if loan.date_to else payslip.date_to
    days_work = min(days_work, (date_to - date_from).days + 1)
    if loan.infonavit_type == 'percentage':
        result  = contract.l10n_mx_edi_integrated_salary * (loan.amount / 100) * days_work
        continue
    elif loan.infonavit_type == 'vsm' and days_work:
        result = ((contract.company_id.l10n_mx_edi_umi * loan.amount) * 2 / period.get(date.month, 61)) * days_work
        continue
    elif loan.infonavit_type == 'fixed_amount':
        result = loan.amount * 2 / period.get(date.month, 61) * days_work
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_scv010" model="hr.salary.rule">
        <field name="name">Seguro vivienda infonavit</field>
        <field name="sequence" eval="63001" />
        <field name="code">SINF009</field>
        <field name="l10n_mx_edi_code">009</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if INF009:
    days = 1
    if contract.l10n_mx_edi_schedule_pay_id.code == '02':
        days = 7
    elif contract.l10n_mx_edi_schedule_pay_id.code == '03':
        days = 14
    elif contract.l10n_mx_edi_schedule_pay_id.code == '04':
        days = 15
    elif contract.l10n_mx_edi_schedule_pay_id.code == '10':
        days = 10
    for loan in payslip.get_loans('inf_009'):
        date_from = payslip.l10n_mx_edi_date_from or payslip.date_from
        if date_from.month in [1, 3, 5, 7, 9, 11] and date_from.day &lt;= days or \
           loan.date_from and (
               loan.date_from &gt;= payslip.date_from and loan.date_from &lt;= payslip.date_to or \
               contract.date_start &gt;= payslip.date_from and contract.date_start &lt;= payslip.date_to):
            result += 15
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_010" model="hr.salary.rule">
        <field name="name">Pago por crédito de vivienda</field>
        <field name="sequence" eval="63000" />
        <field name="code">CV010</field>
        <field name="l10n_mx_edi_code">010</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['cv_010'].amount if 'cv_010' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_011" model="hr.salary.rule">
        <field name="name">Pago de abonos INFONACOT</field>
        <field name="sequence" eval="900002" />
        <field name="code">DPAI011</field>
        <field name="l10n_mx_edi_code">011</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['dpai_011'].amount if 'dpai_011' in inputs else 0.0 or 0.0
net_salary = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']
result += sum(payslip.get_loans('dpai_011').mapped('amount'))

if result and net_salary &lt;= result:
    days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
    day_amount = result / contract.l10n_mx_edi_schedule_pay_id.days_to_pay if contract.l10n_mx_edi_schedule_pay_id.days_to_pay else 0
    result = days_work * day_amount
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_012" model="hr.salary.rule">
        <field name="name">Anticipo de salarios</field>
        <field name="sequence" eval="65000" />
        <field name="code">012</field>
        <field name="l10n_mx_edi_code">012</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_012'].amount if 'd_012' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_013" model="hr.salary.rule">
        <field name="name">Pagos hechos con exceso al trabajador</field>
        <field name="sequence" eval="66000" />
        <field name="code">013</field>
        <field name="l10n_mx_edi_code">013</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_013'].amount if 'd_013' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_014" model="hr.salary.rule">
        <field name="name">Errores</field>
        <field name="sequence" eval="67000" />
        <field name="code">D014</field>
        <field name="l10n_mx_edi_code">014</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['d_014'].amount if 'd_014' in inputs else 0.0
for loan in payslip.get_loans('d_014'):
    result += loan.amount
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_015" model="hr.salary.rule">
        <field name="name">Pérdidas</field>
        <field name="sequence" eval="68000" />
        <field name="code">015</field>
        <field name="l10n_mx_edi_code">015</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_015'].amount if 'd_015' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_016" model="hr.salary.rule">
        <field name="name">Averías</field>
        <field name="sequence" eval="69000" />
        <field name="code">D016</field>
        <field name="l10n_mx_edi_code">016</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['d_016'].amount if 'd_016' in inputs else 0.0
for loan in payslip.get_loans('d_016'):
    result += loan.amount
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_017" model="hr.salary.rule">
        <field name="name">Adquisición de artículos producidos por la empresa o establecimiento</field>
        <field name="sequence" eval="70000" />
        <field name="code">017</field>
        <field name="l10n_mx_edi_code">017</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_017'].amount if 'd_017' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_018" model="hr.salary.rule">
        <field
            name="name"
        >Cuotas para la constitución y fomento de sociedades cooperativas y de cajas de ahorro</field>
        <field name="sequence" eval="71000" />
        <field name="code">018</field>
        <field name="l10n_mx_edi_code">018</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_018'].amount if 'd_018' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_019" model="hr.salary.rule">
        <field name="name">Cuotas sindicales</field>
        <field name="sequence" eval="72000" />
        <field name="code">019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_019'].amount if 'd_019' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_020" model="hr.salary.rule">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="sequence" eval="1009" />
        <field name="code">D020</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = contract.company_id.l10n_mx_edi_use_leave_deduction</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
leaves = (worked_days['LEAVE90'].number_of_days * worked_days['LEAVE90'].work_entry_type_id.l10n_mx_edi_factor) if 'LEAVE90' in worked_days else 0.0
result = contract.l10n_mx_edi_daily_wage * leaves
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_021" model="hr.salary.rule">
        <field name="name">Cuotas obrero patronales</field>
        <field name="sequence" eval="74000" />
        <field name="code">021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_021'].amount if 'd_021' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_022" model="hr.salary.rule">
        <field name="name">Impuestos Locales</field>
        <field name="sequence" eval="75000" />
        <field name="code">022</field>
        <field name="l10n_mx_edi_code">022</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_022'].amount if 'd_022' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_023" model="hr.salary.rule">
        <field name="name">Aportaciones voluntarias</field>
        <field name="sequence" eval="76000" />
        <field name="code">D023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['d_023'].amount if 'd_023' in inputs else 0.0
result += sum(payslip.get_loans('d_023').mapped('amount'))
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_024" model="hr.salary.rule">
        <field name="name">Ajuste en Gratificación Anual - Exento</field>
        <field name="sequence" eval="77000" />
        <field name="code">024</field>
        <field name="l10n_mx_edi_code">024</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_024'].amount if 'd_024' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_025" model="hr.salary.rule">
        <field name="name">Ajuste en Gratificación Anual - Gravado</field>
        <field name="sequence" eval="77100" />
        <field name="code">025</field>
        <field name="l10n_mx_edi_code">025</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_025'].amount if 'd_025' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_026" model="hr.salary.rule">
        <field name="name">Ajuste en Participación de los Trabajadores en las Utilidades PTU Exento</field>
        <field name="sequence" eval="77200" />
        <field name="code">026</field>
        <field name="l10n_mx_edi_code">026</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_026'].amount if 'd_026' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_027" model="hr.salary.rule">
        <field name="name">Ajuste en Participación de los Trabajadores en las Utilidades PTU Gravado</field>
        <field name="sequence" eval="77300" />
        <field name="code">027</field>
        <field name="l10n_mx_edi_code">027</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_027'].amount if 'd_027' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_028" model="hr.salary.rule">
        <field name="name">Ajuste en Reembolso de Gastos Médicos Dentales y Hospitalarios Exento</field>
        <field name="sequence" eval="77400" />
        <field name="code">028</field>
        <field name="l10n_mx_edi_code">028</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_028'].amount if 'd_028' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_029" model="hr.salary.rule">
        <field name="name">Ajuste en Fondo de ahorro Exento</field>
        <field name="sequence" eval="77500" />
        <field name="code">029</field>
        <field name="l10n_mx_edi_code">029</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_029'].amount if 'd_029' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_030" model="hr.salary.rule">
        <field name="name">Ajuste en Caja de ahorro Exento</field>
        <field name="sequence" eval="77600" />
        <field name="code">030</field>
        <field name="l10n_mx_edi_code">030</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_030'].amount if 'd_030' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_031" model="hr.salary.rule">
        <field name="name">Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patrón Exento</field>
        <field name="sequence" eval="77700" />
        <field name="code">031</field>
        <field name="l10n_mx_edi_code">031</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_031'].amount if 'd_031' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_032" model="hr.salary.rule">
        <field name="name">Ajuste en Premios por puntualidad Gravado</field>
        <field name="sequence" eval="77800" />
        <field name="code">032</field>
        <field name="l10n_mx_edi_code">032</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_032'].amount if 'd_032' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_033" model="hr.salary.rule">
        <field name="name">Ajuste en Prima de Seguro de vida Exento</field>
        <field name="sequence" eval="77900" />
        <field name="code">033</field>
        <field name="l10n_mx_edi_code">033</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_033'].amount if 'd_033' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_034" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de Gastos Médicos Mayores Exento</field>
        <field name="sequence" eval="78000" />
        <field name="code">034</field>
        <field name="l10n_mx_edi_code">034</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_034'].amount if 'd_034' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_035" model="hr.salary.rule">
        <field name="name">Ajuste en Cuotas Sindicales Pagadas por el Patrón Exento</field>
        <field name="sequence" eval="78100" />
        <field name="code">035</field>
        <field name="l10n_mx_edi_code">035</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_035'].amount if 'd_035' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_036" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidios por incapacidad Exento</field>
        <field name="sequence" eval="78200" />
        <field name="code">036</field>
        <field name="l10n_mx_edi_code">036</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_036'].amount if 'd_036' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_037" model="hr.salary.rule">
        <field name="name">Ajuste en Becas para trabajadores o hijos Exento</field>
        <field name="sequence" eval="78300" />
        <field name="code">037</field>
        <field name="l10n_mx_edi_code">037</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_037'].amount if 'd_037' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_038" model="hr.salary.rule">
        <field name="name">Ajuste en Horas extra Exento</field>
        <field name="sequence" eval="78400" />
        <field name="code">038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_038'].amount if 'd_038' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_039" model="hr.salary.rule">
        <field name="name">Ajuste en Horas extra Gravado</field>
        <field name="sequence" eval="78500" />
        <field name="code">039</field>
        <field name="l10n_mx_edi_code">039</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_039'].amount if 'd_039' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_040" model="hr.salary.rule">
        <field name="name">Ajuste en Prima dominical Exento</field>
        <field name="sequence" eval="78600" />
        <field name="code">040</field>
        <field name="l10n_mx_edi_code">040</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_040'].amount if 'd_040' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_041" model="hr.salary.rule">
        <field name="name">Ajuste en Prima dominical Gravado</field>
        <field name="sequence" eval="78700" />
        <field name="code">041</field>
        <field name="l10n_mx_edi_code">041</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_041'].amount if 'd_041' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_042" model="hr.salary.rule">
        <field name="name">Ajuste en Prima vacacional Exento</field>
        <field name="sequence" eval="78800" />
        <field name="code">042</field>
        <field name="l10n_mx_edi_code">042</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_042'].amount if 'd_042' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_043" model="hr.salary.rule">
        <field name="name">Ajuste en Prima vacacional Gravado</field>
        <field name="sequence" eval="78900" />
        <field name="code">043</field>
        <field name="l10n_mx_edi_code">043</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_043'].amount if 'd_043' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_048" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de retiro Exento</field>
        <field name="sequence" eval="79400" />
        <field name="code">048</field>
        <field name="l10n_mx_edi_code">048</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_048'].amount if 'd_048' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_049" model="hr.salary.rule">
        <field name="name">Ajuste en Indemnizaciones Exento</field>
        <field name="sequence" eval="79500" />
        <field name="code">049</field>
        <field name="l10n_mx_edi_code">049</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_049'].amount if 'd_049' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_050" model="hr.salary.rule">
        <field name="name">Ajuste en Indemnizaciones Gravado</field>
        <field name="sequence" eval="79600" />
        <field name="code">050</field>
        <field name="l10n_mx_edi_code">050</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_050'].amount if 'd_050' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_051" model="hr.salary.rule">
        <field name="name">Ajuste en Reembolso por funeral Exento</field>
        <field name="sequence" eval="79700" />
        <field name="code">051</field>
        <field name="l10n_mx_edi_code">051</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_051'].amount if 'd_051' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_052" model="hr.salary.rule">
        <field name="name">Ajuste en Cuotas de seguridad social pagadas por el patrón Exento</field>
        <field name="sequence" eval="79800" />
        <field name="code">052</field>
        <field name="l10n_mx_edi_code">052</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_052'].amount if 'd_052' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_053" model="hr.salary.rule">
        <field name="name">Ajuste en Comisiones Gravado</field>
        <field name="sequence" eval="79900" />
        <field name="code">053</field>
        <field name="l10n_mx_edi_code">053</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_053'].amount if 'd_053' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_054" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de despensa Exento</field>
        <field name="sequence" eval="80000" />
        <field name="code">D054</field>
        <field name="l10n_mx_edi_code">054</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['d_054'].amount if 'd_054' in inputs else 0.0
if PE029 or PG029:
    result += contract.l10n_mx_edi_food_voucher_onerous
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_055" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de restaurante Exento</field>
        <field name="sequence" eval="80100" />
        <field name="code">055</field>
        <field name="l10n_mx_edi_code">055</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_055'].amount if 'd_055' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_056" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de gasolina Exento</field>
        <field name="sequence" eval="80200" />
        <field name="code">056</field>
        <field name="l10n_mx_edi_code">056</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_056'].amount if 'd_056' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_057" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de ropa Exento</field>
        <field name="sequence" eval="80300" />
        <field name="code">057</field>
        <field name="l10n_mx_edi_code">057</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_057'].amount if 'd_057' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_058" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para renta Exento</field>
        <field name="sequence" eval="80400" />
        <field name="code">058</field>
        <field name="l10n_mx_edi_code">058</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_058'].amount if 'd_058' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_059" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para artículos escolares Exento</field>
        <field name="sequence" eval="80500" />
        <field name="code">059</field>
        <field name="l10n_mx_edi_code">059</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_059'].amount if 'd_059' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_060" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para anteojos Exento</field>
        <field name="sequence" eval="80600" />
        <field name="code">060</field>
        <field name="l10n_mx_edi_code">060</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_060'].amount if 'd_060' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_061" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para transporte Exento</field>
        <field name="sequence" eval="80700" />
        <field name="code">061</field>
        <field name="l10n_mx_edi_code">061</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_061'].amount if 'd_061' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_062" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para gastos de funeral Exento</field>
        <field name="sequence" eval="80800" />
        <field name="code">062</field>
        <field name="l10n_mx_edi_code">062</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_062'].amount if 'd_062' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_063" model="hr.salary.rule">
        <field name="name">Ajuste en Otros ingresos por salarios Exento</field>
        <field name="sequence" eval="80900" />
        <field name="code">063</field>
        <field name="l10n_mx_edi_code">063</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_063'].amount if 'd_063' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_064" model="hr.salary.rule">
        <field name="name">Ajuste en Otros ingresos por salarios Gravado</field>
        <field name="sequence" eval="81000" />
        <field name="code">064</field>
        <field name="l10n_mx_edi_code">064</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_064'].amount if 'd_064' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_065" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Exento</field>
        <field name="sequence" eval="81100" />
        <field name="code">065</field>
        <field name="l10n_mx_edi_code">065</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_065'].amount if 'd_065' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_066" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Gravado</field>
        <field name="sequence" eval="81200" />
        <field name="code">066</field>
        <field name="l10n_mx_edi_code">066</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_066'].amount if 'd_066' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_069" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Acumulable</field>
        <field name="sequence" eval="81500" />
        <field name="code">069</field>
        <field name="l10n_mx_edi_code">069</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_069'].amount if 'd_069' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_070" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro No Acumulable</field>
        <field name="sequence" eval="81600" />
        <field name="code">070</field>
        <field name="l10n_mx_edi_code">070</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_070'].amount if 'd_070' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_071" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="sequence" eval="86999" />
        <field name="code">ASEE</field>
        <field name="l10n_mx_edi_code">071</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['asee'].amount if 'asee' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_072" model="hr.salary.rule">
        <field name="name">Ajuste en Ingresos en acciones o títulos valor que representan bienes Exento</field>
        <field name="sequence" eval="81800" />
        <field name="code">072</field>
        <field name="l10n_mx_edi_code">072</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_072'].amount if 'd_072' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_073" model="hr.salary.rule">
        <field name="name">Ajuste en Ingresos en acciones o títulos valor que representan bienes Gravado</field>
        <field name="sequence" eval="81900" />
        <field name="code">073</field>
        <field name="l10n_mx_edi_code">073</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_073'].amount if 'd_073' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_074" model="hr.salary.rule">
        <field name="name">Ajuste en Alimentación Exento</field>
        <field name="sequence" eval="82000" />
        <field name="code">074</field>
        <field name="l10n_mx_edi_code">074</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_074'].amount if 'd_074' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_075" model="hr.salary.rule">
        <field name="name">Ajuste en Alimentación Gravado</field>
        <field name="sequence" eval="82100" />
        <field name="code">075</field>
        <field name="l10n_mx_edi_code">075</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_075'].amount if 'd_075' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_076" model="hr.salary.rule">
        <field name="name">Ajuste en Habitación Exento</field>
        <field name="sequence" eval="82200" />
        <field name="code">076</field>
        <field name="l10n_mx_edi_code">076</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_076'].amount if 'd_076' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_077" model="hr.salary.rule">
        <field name="name">Ajuste en Habitación Gravado</field>
        <field name="sequence" eval="82300" />
        <field name="code">077</field>
        <field name="l10n_mx_edi_code">077</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_077'].amount if 'd_077' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_078" model="hr.salary.rule">
        <field name="name">Ajuste en Premios por asistencia</field>
        <field name="sequence" eval="82400" />
        <field name="code">078</field>
        <field name="l10n_mx_edi_code">078</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_078'].amount if 'd_078' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_079" model="hr.salary.rule">
        <field
            name="name"
        >Ajuste en Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados</field>
        <field name="sequence" eval="82500" />
        <field name="code">079</field>
        <field name="l10n_mx_edi_code">079</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_079'].amount if 'd_079' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_080" model="hr.salary.rule">
        <field name="name">Ajuste en Viáticos gravados</field>
        <field name="sequence" eval="82600" />
        <field name="code">080</field>
        <field name="l10n_mx_edi_code">080</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_080'].amount if 'd_080' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_081" model="hr.salary.rule">
        <field name="name">Ajuste en Viáticos - entregados al trabajador</field>
        <field name="sequence" eval="82700" />
        <field name="code">081</field>
        <field name="l10n_mx_edi_code">081</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_081'].amount if 'd_081' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_082" model="hr.salary.rule">
        <field name="name">Ajuste en Fondo de ahorro Gravado</field>
        <field name="sequence" eval="82800" />
        <field name="code">082</field>
        <field name="l10n_mx_edi_code">082</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_082'].amount if 'd_082' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_083" model="hr.salary.rule">
        <field name="name">Ajuste en Caja de ahorro Gravado</field>
        <field name="sequence" eval="82900" />
        <field name="code">083</field>
        <field name="l10n_mx_edi_code">083</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_083'].amount if 'd_083' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_084" model="hr.salary.rule">
        <field name="name">Ajuste en Prima de Seguro de vida Gravado</field>
        <field name="sequence" eval="83000" />
        <field name="code">084</field>
        <field name="l10n_mx_edi_code">084</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_084'].amount if 'd_084' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_085" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de Gastos Médicos Mayores Gravado</field>
        <field name="sequence" eval="83100" />
        <field name="code">085</field>
        <field name="l10n_mx_edi_code">085</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_085'].amount if 'd_085' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_086" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidios por incapacidad Gravado</field>
        <field name="sequence" eval="83200" />
        <field name="code">086</field>
        <field name="l10n_mx_edi_code">086</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_086'].amount if 'd_086' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_087" model="hr.salary.rule">
        <field name="name">Ajuste en Becas para trabajadores o hijos Gravado</field>
        <field name="sequence" eval="83300" />
        <field name="code">087</field>
        <field name="l10n_mx_edi_code">087</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_087'].amount if 'd_087' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_088" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de retiro Gravado</field>
        <field name="sequence" eval="83400" />
        <field name="code">088</field>
        <field name="l10n_mx_edi_code">088</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_088'].amount if 'd_088' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_089" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de despensa Gravado</field>
        <field name="sequence" eval="83500" />
        <field name="code">089</field>
        <field name="l10n_mx_edi_code">089</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_089'].amount if 'd_089' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_090" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de restaurante Gravado</field>
        <field name="sequence" eval="83600" />
        <field name="code">090</field>
        <field name="l10n_mx_edi_code">090</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_090'].amount if 'd_090' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_091" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de gasolina Gravado</field>
        <field name="sequence" eval="83700" />
        <field name="code">091</field>
        <field name="l10n_mx_edi_code">091</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_091'].amount if 'd_091' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_092" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de ropa Gravado</field>
        <field name="sequence" eval="83800" />
        <field name="code">092</field>
        <field name="l10n_mx_edi_code">092</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_092'].amount if 'd_092' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_093" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para renta Gravado</field>
        <field name="sequence" eval="83900" />
        <field name="code">093</field>
        <field name="l10n_mx_edi_code">093</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_093'].amount if 'd_093' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_094" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para artículos escolares Gravado</field>
        <field name="sequence" eval="84000" />
        <field name="code">094</field>
        <field name="l10n_mx_edi_code">094</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_094'].amount if 'd_094' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_095" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para anteojos Gravado</field>
        <field name="sequence" eval="84100" />
        <field name="code">095</field>
        <field name="l10n_mx_edi_code">095</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_095'].amount if 'd_095' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_096" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para transporte Gravado</field>
        <field name="sequence" eval="84200" />
        <field name="code">096</field>
        <field name="l10n_mx_edi_code">096</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_096'].amount if 'd_096' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_097" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para gastos de funeral Gravado</field>
        <field name="sequence" eval="84300" />
        <field name="code">097</field>
        <field name="l10n_mx_edi_code">097</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_097'].amount if 'd_097' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_098" model="hr.salary.rule">
        <field name="name">Ajuste a ingresos asimilados a salarios gravados</field>
        <field name="sequence" eval="84400" />
        <field name="code">098</field>
        <field name="l10n_mx_edi_code">098</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_098'].amount if 'd_098' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_099" model="hr.salary.rule">
        <field name="name">Ajuste a ingresos por sueldos y salarios gravados</field>
        <field name="sequence" eval="84500" />
        <field name="code">099</field>
        <field name="l10n_mx_edi_code">099</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_099'].amount if 'd_099' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_100" model="hr.salary.rule">
        <field name="name">Ajuste en Viáticos exentos</field>
        <field name="sequence" eval="84600" />
        <field name="code">100</field>
        <field name="l10n_mx_edi_code">100</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_100'].amount if 'd_100' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_101" model="hr.salary.rule">
        <field name="name">ISR Retenido de ejercicio anterior</field>
        <field name="sequence" eval="85000" />
        <field name="code">101</field>
        <field name="l10n_mx_edi_code">101</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_101'].amount if 'd_101' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_102" model="hr.salary.rule">
        <field
            name="name"
        >Ajuste a pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades, gravados</field>
        <field name="sequence" eval="86000" />
        <field name="code">102</field>
        <field name="l10n_mx_edi_code">102</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_102'].amount if 'd_102' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_103" model="hr.salary.rule">
        <field
            name="name"
        >Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo gravados</field>
        <field name="sequence" eval="86100" />
        <field name="code">103</field>
        <field name="l10n_mx_edi_code">103</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_103'].amount if 'd_103' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_104" model="hr.salary.rule">
        <field
            name="name"
        >Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo exentos</field>
        <field name="sequence" eval="86200" />
        <field name="code">104</field>
        <field name="l10n_mx_edi_code">104</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_104'].amount if 'd_104' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_105" model="hr.salary.rule">
        <field
            name="name"
        >Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo gravados</field>
        <field name="sequence" eval="86300" />
        <field name="code">105</field>
        <field name="l10n_mx_edi_code">105</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_105'].amount if 'd_105' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_106" model="hr.salary.rule">
        <field
            name="name"
        >Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo exentos</field>
        <field name="sequence" eval="86400" />
        <field name="code">106</field>
        <field name="l10n_mx_edi_code">106</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['d_106'].amount if 'd_106' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_107" model="hr.salary.rule">
        <field name="name">Ajuste al Subsidio Causado</field>
        <field name="sequence" eval="86500" />
        <field name="code">107</field>
        <field name="l10n_mx_edi_code">107</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
         <field name="amount_python_compute">
result = inputs['d_107'].amount if 'd_107' in inputs else 0.0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_isr" model="hr.salary.rule">
        <field name="name">AUXILIAR ISR</field>
        <field name="sequence" eval="87000" />
        <field name="code">AUX_ISR</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
use_leave_ded = payslip.contract_id.company_id.l10n_mx_edi_use_leave_deduction
income_period = categories['PERGRA'] - IEG006 - IM006 - IRT006 - LPHC006 - (D020 + FJSS if use_leave_ded else 0)
if payslip.company_id.l10n_mx_edi_isr_174_bonus:
    income_period -= PG021
# Table ISR (limite_inferior, limite_superior, cuota_fija, tasa)
table = {'05': [(0.01, 746.04, 0.00, 0.0192), (746.05, 6332.05, 14.32, 0.0640),
         (6332.06, 11128.01, 371.83, 0.1088), (11128.02, 12935.82, 893.63, 0.1600),
         (12935.83, 15487.71, 1182.88, 0.1792), (15487.72, 31236.49, 1640.18, 0.2136),
         (31236.50, 49233.00, 5004.12, 0.2352), (49233.01, 93993.90, 9236.89, 0.3000),
         (93993.91, 125325.20, 22665.17, 0.3200), (125325.21, 375975.61, 32691.18, 0.3400),
         (375975.62, 999999999, 117912.32, 0.3500)],
         '04': [(0.01, 368.10, 0.00, 0.0192), (368.11, 3124.35, 7.05, 0.0640),
         (3124.36, 5490.75, 183.45,  0.1088), (5490.76, 6382.80, 441.00,  0.1600),
         (6382.81, 7641.90, 583.65,  0.1792), (7641.91, 15412.80, 809.25, 0.2136),
         (15412.81, 24292.65, 2469.15, 0.2352), (24292.66, 46378.50, 4557.75, 0.3000),
         (46378.51, 61838.10, 11183.40, 0.3200), (61838.11, 185514.30, 16130.55, 0.3400),
         (185514.31, 999999999, 58180.35, 0.3500)],
         '02': [(0.01, 171.78, 0.00, 0.0192), (171.79, 1458.03, 3.29, 0.0640),
         (1458.04, 2562.35, 85.61, 0.1088), (2562.36, 2978.64, 205.80, 0.1600),
         (2978.65, 3566.22, 272.37, 0.1792), (3566.23, 7192.64, 377.65, 0.2136),
         (7192.65, 11336.57, 1152.27, 0.2352), (11336.58, 21643.30, 2126.95, 0.3000),
         (21643.31, 28857.78, 5218.92, 0.3200), (28857.79, 86573.34, 7527.59, 0.3400),
         (86573.35, 99999999, 27150.83, 0.3500)],
         '01': [(0.01, 24.54, 0.00, 0.0192), (24.55, 208.29, 0.47, 0.0640),
         (208.30, 366.05, 12.23, 0.1088), (366.06, 425.52, 29.40, 0.1600),
         (425.53, 509.46, 38.91, 0.1792), (509.47, 1027.52, 53.95, 0.2136),
         (1027.53, 1619.51, 164.61, 0.2352), (1619.52, 3091.90, 303.85, 0.3000),
         (3091.91, 4122.54, 745.56, 0.3200), (4122.55, 12367.62, 1075.37, 0.3400),
         (12367.63, 99999999, 3878.69, 0.3500)],
         '10': [(0.01, 245.40, 0.00, 0.0192), (245.41, 2082.90, 4.70, 0.0640),
         (2082.91, 3660.50, 122.30, 0.1088), (3660.51, 4255.20, 294.00, 0.1600),
         (4255.21, 5094.60, 389.10, 0.1792), (5094.61, 10275.20, 539.50, 0.2136),
         (10275.21, 16195.10, 1646.10, 0.2352), (16195.11, 30919.00, 3038.50, 0.3000),
         (30,919.01, 41225.40, 7455.60, 0.3200), (41225.41, 123676.20, 10753.70, 0.3400),
         (123676.21, 99999999, 38786.90, 0.3500)]}
result = 0

# Get income_monthly
category = employee.env.ref('l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed')
aguinaldo = employee.env.ref('l10n_mx_edi_payslip.payroll_structure_data_02')
payslips = employee.slip_ids.filtered(
    lambda sl: sl.state == 'done' and
    sl.id != payslip.id and
    sl.struct_id != aguinaldo and
    sl.date_from.month == payslip.date_from.month and
    sl.date_from.year == payslip.date_from.year)
lines = payslips.mapped('line_ids')
accumulated = sum(lines.filtered(lambda li: li.category_id.id == category.id).mapped('total')) - sum(lines.filtered(lambda li: li.code in ('IEG006',  'IM006', 'IRT006', 'LPHC006')).mapped('total'))
accumulated -= sum(lines.filtered(lambda li: li.code in ('D020', 'FJSS')).mapped('total')) if contract.company_id.l10n_mx_edi_use_leave_deduction else 0

if contract.l10n_mx_edi_special_isr:
    result = income_period * contract.l10n_mx_edi_special_isr

elif not contract.company_id.l10n_mx_edi_prorate_isr:
    table_isr = table.get(contract.l10n_mx_edi_schedule_pay_id.code, [])
    if table_isr:
        for value in table_isr:
            if income_period >=value[0] and value[1] >= income_period:
                extra = income_period - value[0]
                result = (extra * value[3]) + value[2]
                break
    if not payslip.company_id.l10n_mx_edi_isr_annual_adjustment and payslip.l10n_mx_edi_is_last_payslip():
        income_monthly = income_period + accumulated
        for value in table['05']:
            if income_monthly >=value[0] and value[1] >= income_monthly:
                extra = income_monthly - value[0]
                result = (extra * value[3]) + value[2]
                break
        rules = payslip._l10n_mx_edi_get_isr_rules()
        result = result - sum(lines.filtered(lambda li: li.salary_rule_id in rules).mapped('total'))
else:
    table = table['05']
    result_month = 0
    if not payslip.company_id.l10n_mx_edi_isr_annual_adjustment and payslip.l10n_mx_edi_is_last_payslip():
        income_monthly = income_period + accumulated
        for value in table:
            if income_monthly >=value[0] and value[1] >= income_monthly:
                extra = income_monthly - value[0]
                result_month = (extra * value[3]) + value[2]
                break

    base_days = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
    if base_days:
        month_days = contract.company_id.l10n_mx_edi_days_daily_wage or 30
        if contract.company_id.l10n_mx_edi_salary_worked_days:
            month_days = 30.4166
        income_period = income_period / base_days * month_days
        for value in table:
            if income_period >=value[0] and value[1] >= income_period:
                extra = income_period - value[0]
                result = (extra * value[3]) + value[2]
                break
        result = result / month_days * base_days
    rules = payslip._l10n_mx_edi_get_isr_rules()
    result = max(result_month - sum(lines.filtered(lambda li: li.salary_rule_id in rules).mapped('total')), result)
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_aux_002" model="hr.salary.rule">
        <field name="name">Auxiliar Subsidio para el empleo</field>
        <field name="code">AUX_OP002</field>
        <field name="sequence">86999</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
# Monto maximo para quienes aplica el subsidio
max_amount = 9081.00
if contract.wage &lt; max_amount:
    if contract.l10n_mx_edi_schedule_pay_id.days_to_pay == '30':
        result = round(round(contract.company_id.l10n_mx_edi_uma * 30.4, 2) * (11.82 / 100))
    else:
        subsidy_by_month = round(contract.company_id.l10n_mx_edi_uma * 30.4, 2) * (11.82 / 100)
        result = subsidy_by_month / 30.4 * contract.l10n_mx_edi_schedule_pay_id.days_to_pay
        </field>
        <field name="note">
Se otorga un subsidio para el empleo mensual a los trabajadores a que hace referencia el artículo primero de este
decreto, cuyos ingresos mensuales que sirvan de base para calcular el impuesto sobre la renta correspondiente al
mes de calendario de que se trate, no excedan de $9,081.00

Quienes realicen pagos por salarios correspondientes a periodos menores a un mes, para calcular el subsidio para el
empleo correspondiente a cada pago, dividirán la cantidad que resulte de multiplicar el valor mensual de la Unidad de
Medida y Actualización por 11.82% entre 30.4. El resultado así obtenido se multiplicará por el número de días al que
corresponda el periodo de pago para determinar el monto del subsidio para el empleo que le corresponde al trabajador
por dichos pagos.
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_deduction_002" model="hr.salary.rule">
        <field name="name">ISR</field>
        <field name="sequence" eval="87005" />
        <field name="code">ISR002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = AUX_ISR - AUX_OP002 if abs(AUX_ISR) - AUX_OP002 &gt; 0 else 0
result = result if result &gt; 0 else 0
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_isr_174" model="hr.salary.rule">
        <field name="name">ISR Art174</field>
        <field name="sequence" eval="87006" />
        <field name="code">ISR174</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_payroll.DED" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
table = [(0.01, 746.04, 0.00, 0.0192), (746.05, 6332.05, 14.32, 0.0640),
         (6332.06, 11128.01, 371.83, 0.1088), (11128.02, 12935.82, 893.63, 0.1600),
         (12935.83, 15487.71, 1182.88, 0.1792), (15487.72, 31236.49, 1640.18, 0.2136),
         (31236.50, 49233.00, 5004.12, 0.2352), (49233.01, 93993.90, 9236.89, 0.3000),
         (93993.91, 125325.20, 22665.17, 0.3200), (125325.21, 375975.61, 32691.18, 0.3400),
         (375975.62, 999999999, 117912.32, 0.3500)]
result = 0
if payslip.company_id.l10n_mx_edi_isr_174_bonus:
    income_period = PG021
    wage = contract.wage

    # I. La remuneración de que se trate se dividirá entre 365 y el resultado se multiplicará por 30.4; (aguinaldo gravado)

    year = payslip.l10n_mx_edi_payment_date.year
    days_year = 365
    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
        days_year = 366
    art_174_lisr = income_period / days_year * 30.4

    # II. A la cantidad que se obtenga conforme a la fracción anterior, se le adicionará el ingreso ordinario por la
    #     prestación de un servicio personal subordinado que perciba el trabajador en forma regular en el mes de que se
    #     trate y al resultado se le aplicará el procedimiento establecido en el artículo 96 de la Ley;

    base_gravable = art_174_lisr + wage

    # III. El Impuesto que se obtenga conforme a la fracción anterior se disminuirá con el Impuesto que corresponde al
    #      ingreso ordinario por la prestación de un servicio personal subordinado a que se refiere dicha fracción,
    #      calculando este último sin considerar las demás remuneraciones mencionadas en este artículo;

    result1 = result2 = 0
    # ISR por el total de la fracción anterior
    for value in table:
       if base_gravable >=value[0] and value[1] >= base_gravable:
           result1 = (((base_gravable - value[0]) * value[3]) + value[2])
    # ISR ordinario
    for value in table:
       if wage >=value[0] and value[1] >= wage:
           result2 = (((wage - value[0]) * value[3]) + value[2])

    # IV. El Impuesto a retener será el que resulte de aplicar a las remuneraciones a que se refiere este artículo, sin
    #     deducción alguna, la tasa a que se refiere la fracción siguiente, y
    isr = result1 - result2

    # V. La tasa a que se refiere la fracción anterior, se calculará dividiendo el Impuesto que se determine en términos
    #    de la fracción III de este artículo entre la cantidad que resulte conforme a la fracción I de dicho artículo.
    #    El cociente se multiplicará por cien y el producto se expresara en por ciento
    efective_rate = (isr / (art_174_lisr or 1))
    result = income_period * efective_rate
        </field>
        <field name="note">
Si se habilita la opción de utilizar la ley 174 del ISR para las primas, esta regla obtendrá el
ISR correspondiente a las primas bajo esta ley.
        </field>
    </record>

    <!-- Other Payments -->
    <record id="hr_rule_l10n_mx_payroll_other_payment_001" model="hr.salary.rule">
        <field name="name">Reintegro de ISR pagado en exceso - siempre que no haya sido enterado al SAT</field>
        <field name="code">OP001</field>
        <field name="sequence" eval="87010" />
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['op_001'].amount if 'op_001' in inputs else 0.0
result -= AUX_ISR if AUX_ISR &lt; 0 else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_002" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">OP002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="sequence">87001</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_003" model="hr.salary.rule">
        <field name="name">Viáticos - entregados al trabajador</field>
        <field name="code">OP003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_003'].amount if 'op_003' in inputs else 0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_004" model="hr.salary.rule">
        <field name="name">Aplicación de saldo a favor por compensación anual</field>
        <field name="code">OP004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_004'].amount if 'op_004' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_005" model="hr.salary.rule">
        <field
            name="name"
        >Reintegro de ISR retenido en exceso de ejercicio anterior (siempre que no haya sido enterado al SAT).</field>
        <field name="code">OP005</field>
        <field name="l10n_mx_edi_code">005</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_005'].amount if 'op_005' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_006" model="hr.salary.rule">
        <field name="name">Alimentos en bienes (Servicios de comedor y comida) Art 94 último párrafo LISR</field>
        <field name="code">OP006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_006'].amount if 'op_006' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_007" model="hr.salary.rule">
        <field name="name">ISR ajustado por subsidio</field>
        <field name="code">OP007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_007'].amount if 'op_007' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_008" model="hr.salary.rule">
        <field
            name="name"
        >Subsidio efectivamente entregado que no correspondía (Aplica sólo cuando haya ajuste al cierre de mes en relación con el Apéndice 7 de la guía de llenado de nómina)</field>
        <field name="code">OP008</field>
        <field name="l10n_mx_edi_code">008</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_008'].amount if 'op_008' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_009" model="hr.salary.rule">
        <field name="name">Reembolso descuento crédito de vivienda</field>
        <field name="code">opcv_999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['op_009'].amount if 'op_009' in inputs else 0.0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_999" model="hr.salary.rule">
        <field
            name="name"
        >Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados</field>
        <field name="code">OP999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs['op_999'].amount if 'op_999' in inputs else 0.0</field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_999_internet" model="hr.salary.rule">
        <field name="name">Apoyo de internet por teletrabajo</field>
        <field name="sequence" eval="100999" />
        <field name="code">OPI999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['opi_999'].amount if 'opi_999' in inputs else 0.0
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01' and payslip.date_to.day == 1:
    result += contract.l10n_mx_edi_internet_ho
elif contract.l10n_mx_edi_schedule_pay_id.code ==  '02' and payslip.date_to.day &lt;= 7:
    result += contract.l10n_mx_edi_internet_ho
elif contract.l10n_mx_edi_schedule_pay_id.code == '03' and payslip.date_to.day &lt;= 14:
    result += contract.l10n_mx_edi_internet_ho
elif contract.l10n_mx_edi_schedule_pay_id.code == '04' and payslip.date_to.day &lt;= 15:
    result += contract.l10n_mx_edi_internet_ho
elif contract.l10n_mx_edi_schedule_pay_id.code in ('05', '06'):
    result += contract.l10n_mx_edi_internet_ho
elif contract.l10n_mx_edi_schedule_pay_id.code == '10' and payslip.date_to.day &lt;= 10:
    result += contract.l10n_mx_edi_internet_ho
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_other_payment_999_luz" model="hr.salary.rule">
        <field name="name">Apoyo de luz por teletrabajo</field>
        <field name="sequence" eval="100999" />
        <field name="code">OPL999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs['opl_999'].amount if 'opl_999' in inputs else 0.0
if contract.l10n_mx_edi_schedule_pay_id.code ==  '01' and payslip.date_to.day == 1:
    result += contract.l10n_mx_edi_electric_ho
elif contract.l10n_mx_edi_schedule_pay_id.code ==  '02' and payslip.date_to.day &lt;= 7:
    result += contract.l10n_mx_edi_electric_ho
elif contract.l10n_mx_edi_schedule_pay_id.code == '03' and payslip.date_to.day &lt;= 14:
    result += contract.l10n_mx_edi_electric_ho
elif contract.l10n_mx_edi_schedule_pay_id.code == '04' and payslip.date_to.day &lt;= 15:
    result += contract.l10n_mx_edi_electric_ho
elif contract.l10n_mx_edi_schedule_pay_id.code in ('05', '06'):
    result += contract.l10n_mx_edi_electric_ho
elif contract.l10n_mx_edi_schedule_pay_id.code == '10' and payslip.date_to.day &lt;= 10:
    result += contract.l10n_mx_edi_electric_ho
        </field>
    </record>

    <!-- Sueldo Neto -->
    <record id="hr_rule_total_perceptions" model="hr.salary.rule">
        <field name="name">Total Percepciones</field>
        <field name="sequence" eval="999995" />
        <field name="code">Percepciones</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories['PERGRA'] + categories['PEREXE']</field>
    </record>

    <record id="hr_rule_total_excempt" model="hr.salary.rule">
        <field name="name">Total Exento</field>
        <field name="sequence" eval="999996" />
        <field name="code">Exento</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories['PEREXE']</field>
    </record>

    <record id="hr_rule_total_taxed" model="hr.salary.rule">
        <field name="name">Total Gravado</field>
        <field name="sequence" eval="999997" />
        <field name="code">Gravado</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
use_leave_ded = payslip.contract_id.company_id.l10n_mx_edi_use_leave_deduction
result = categories['PERGRA'] - IEG006 - IM006 - IRT006 - LPHC006 - (D020 + FJSS if use_leave_ded else 0)
        </field>
    </record>

    <record id="hr_rule_total_deductions" model="hr.salary.rule">
        <field name="name">Total Deducciones</field>
        <field name="sequence" eval="999998" />
        <field name="code">Deducciones</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories['DED']</field>
    </record>

    <record id="hr_rule_total_other" model="hr.salary.rule">
        <field name="name">Total Otros Pagos</field>
        <field name="sequence" eval="999999" />
        <field name="code">OtrosPagos</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories['OTHER']</field>
    </record>

    <record id="hr_rule_net_salary_0" model="hr.salary.rule">
        <field name="name">Net Salary</field>
        <field name="sequence" eval="1000000" />
        <field name="code">NET</field>
        <field name="category_id" ref="hr_payroll.NET" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field
            name="amount_python_compute"
        >result = categories['PERGRA'] - categories['DED'] + categories['PEREXE'] + categories['OTHER']</field>
    </record>

    <!-- Company Contributions -->
    <record id="hr_rule_l10n_mx_payroll_seguridad_social_company" model="hr.salary.rule">
        <field name="name">Seguridad social Compañía</field>
        <field name="sequence" eval="1000001" />
        <field name="code">SSComp</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated and NET > 0:
    sbc = contract.l10n_mx_edi_sbc
    uma = contract.company_id.l10n_mx_edi_uma
    # Asistencia
    days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
    # Vacaciones
    days_work = worked_days['LEAVE120'].number_of_days if 'LEAVE120' in worked_days else 0.0
    # Feriado
    days_work += worked_days['LEAVE140'].number_of_days if 'LEAVE140' in worked_days else 0.0
    # Generic Time Off
    days_work += worked_days['LEAVE100'].number_of_days if 'LEAVE100' in worked_days else 0.0
    # Licencia de adopción
    days_work += worked_days['LEAVE116'].number_of_days if 'LEAVE116' in worked_days else 0.0
    # Faltas
    leaves = worked_days['LEAVE90'].number_of_days if 'LEAVE90' in worked_days else 0.0
    # Falta justificada sin goce de salario
    leaves += worked_days['LEAVE114'].number_of_days if 'LEAVE114' in worked_days else 0.0
    # Licencia sin goce de salario
    leaves += worked_days['LEAVE115'].number_of_days if 'LEAVE115' in worked_days else 0.0
    specie_fixed = uma * 0.204 * (days_work + leaves)
    specie_excess = ((sbc - (uma * 3)) * 0.011 * (days_work + leaves)) if (sbc - (uma * 3)) &gt; 0 else 0  # Especie - Excedente
    benefits = 0.007 * sbc * (days_work + leaves)  # Enfermedades y maternidad en dinero
    pensioners = 0.0105 * sbc * (days_work + leaves)  # Gastos médicos para pensionados y beneficiarios
    disability = 0.0175 * sbc * days_work  # Invalides y vida
    risk = employee.l10n_mx_edi_risk_rank_id if not employee.l10n_mx_edi_employer_registration_id else employee.l10n_mx_edi_employer_registration_id.job_risk_id
    risk = risk.percentage / 100 * sbc * days_work  # Riesgo de trabajo
    kindergarten = 0.01 * sbc * days_work  # Guarderias

    result = specie_fixed + specie_excess + benefits + pensioners + disability + risk + kindergarten
        </field>
        <field name="note">
Las incapacidades no se consideran para este calculo.

Especie - Cuota fija: Considera los días del periodo - incapacidades
Especie - Excedente: Considera los días del periodo - incapacidades
Enfermedades y maternidad en dinero: Considera los días del periodo - incapacidades
Gastos médicos para pensionados y beneficiarios: Considera los días del periodo - incapacidades
Invalides y vida: Considera los días del periodo: Considera los días del periodo - incapacidades - Faltas
Retiro, Cesantía en Edad Avanzada y Vejez: Considera los días del periodo - incapacidades - Faltas
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_infonavit_company" model="hr.salary.rule">
        <field name="name">Infonavit Compañía</field>
        <field name="sequence" eval="1000002" />
        <field name="code">InfComp</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = not employee.l10n_mx_edi_is_assimilated</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
sbc = contract.l10n_mx_edi_sbc
days_work += worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
days_work += worked_days['LEAVE110'].number_of_days if 'LEAVE110' in worked_days else 0.0
days_work += worked_days['LEAVE111'].number_of_days if 'LEAVE111' in worked_days else 0.0
days_work += worked_days['LEAVE112'].number_of_days if 'LEAVE112' in worked_days else 0.0
days_work += worked_days['LEAVE113'].number_of_days if 'LEAVE113' in worked_days else 0.0
days_work += worked_days['LEAVE140'].number_of_days if 'LEAVE140' in worked_days else 0.0

aux = sbc * days_work
result = 0.05 * aux
        </field>
        <field name="note">
La maternidad no es considerada una incapacidad para el IMSS, sino una condición en la que la
madre se dedica 100% a su bebe, por lo tanto, esta contribución debe pagarse aunque el empleado
este todo el periodo de maternidad.

ARTICULO 33. Cuando por ausencias del trabajador a sus labores no se paguen salarios, pero subsista
la relación laboral, las aportaciones se determinarán conforme a las reglas siguientes: (…)

III. Si los periodos de ausencias están amparados por certificados de incapacidad expedidos
o autorizados expresamente por el Instituto Mexicano del Seguro Social, subsiste la obligación
de pago de las aportaciones por los periodos que las mismas amparen, y (…)
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_retirement_company" model="hr.salary.rule">
        <field name="name">Retiro Compañía</field>
        <field name="sequence" eval="1000003" />
        <field name="code">RetComp</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated and NET > 0:
    sbc = contract.l10n_mx_edi_sbc
    days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
    days_work += worked_days['LEAVE110'].number_of_days if 'LEAVE110' in worked_days else 0.0
    days_work += worked_days['LEAVE111'].number_of_days if 'LEAVE111' in worked_days else 0.0
    days_work += worked_days['LEAVE112'].number_of_days if 'LEAVE112' in worked_days else 0.0
    days_work += worked_days['LEAVE113'].number_of_days if 'LEAVE113' in worked_days else 0.0
    days_work += worked_days['LEAVE140'].number_of_days if 'LEAVE140' in worked_days else 0.0
    aux = sbc * days_work
    retirement = 0.02 * aux

    result = retirement
        </field>
    </record>

    <record id="hr_rule_l10n_mx_payroll_cesantia_company" model="hr.salary.rule">
        <field name="name">Cesantía en edad avanzada y vejez Compañía</field>
        <field name="sequence" eval="1000004" />
        <field name="code">CesComp</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated and NET > 0:
    sbc = contract.l10n_mx_edi_sbc
    minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
    uma = contract.company_id.l10n_mx_edi_uma
    days_work = worked_days['WORK100'].number_of_days if 'WORK100' in worked_days else 0.0
    days_work += worked_days['LEAVE140'].number_of_days if 'LEAVE140' in worked_days else 0.0
    aux = sbc * days_work
    percentage = 0.0315
    if payslip.date_to.year == 2024:
        if sbc &gt; (uma * 4.00):
            percentage = 0.05331
        elif sbc &gt; (uma * 3.5):
            percentage = 0.04882
        elif sbc &gt; (uma * 3.0):
            percentage = 0.04756
        elif sbc &gt; (uma * 2.5):
            percentage = 0.04588
        elif sbc &gt; (uma * 2.0):
            percentage = 0.04353
        elif sbc &gt; (uma * 1.5):
            percentage = 0.04
        elif sbc &gt; minimum_wage:
            percentage = 0.03413
    elif payslip.date_to.year == 2025:
        if sbc &gt; (uma * 4.00):
            percentage = 0.06422
        elif sbc &gt; (uma * 3.5):
            percentage = 0.05747
        elif sbc &gt; (uma * 3.0):
            percentage = 0.05559
        elif sbc &gt; (uma * 2.5):
            percentage = 0.05307
        elif sbc &gt; (uma * 2.0):
            percentage = 0.04954
        elif sbc &gt; (uma * 1.5):
            percentage = 0.04426
        elif sbc &gt; minimum_wage:
            percentage = 0.03544
    elif payslip.date_to.year == 2026:
        if sbc &gt; (uma * 4.00):
            percentage = 0.07513
        elif sbc &gt; (uma * 3.5):
            percentage = 0.06613
        elif sbc &gt; (uma * 3.0):
            percentage = 0.06361
        elif sbc &gt; (uma * 2.5):
            percentage = 0.06026
        elif sbc &gt; (uma * 2.0):
            percentage = 0.05556
        elif sbc &gt; (uma * 1.5):
            percentage = 0.04851
        elif sbc &gt; minimum_wage:
            percentage = 0.03676
    elif payslip.date_to.year == 2027:
        if sbc &gt; (uma * 4.00):
            percentage = 0.08603
        elif sbc &gt; (uma * 3.5):
            percentage = 0.07479
        elif sbc &gt; (uma * 3.0):
            percentage = 0.07164
        elif sbc &gt; (uma * 2.5):
            percentage = 0.06745
        elif sbc &gt; (uma * 2.0):
            percentage = 0.06157
        elif sbc &gt; (uma * 1.5):
            percentage = 0.05276
        elif sbc &gt; minimum_wage:
            percentage = 0.03807
    elif payslip.date_to.year == 2028:
        if sbc &gt; (uma * 4.00):
            percentage = 0.09694
        elif sbc &gt; (uma * 3.5):
            percentage = 0.08345
        elif sbc &gt; (uma * 3.0):
            percentage = 0.07967
        elif sbc &gt; (uma * 2.5):
            percentage = 0.07464
        elif sbc &gt; (uma * 2.0):
            percentage = 0.06759
        elif sbc &gt; (uma * 1.5):
            percentage = 0.05701
        elif sbc &gt; minimum_wage:
            percentage = 0.03939
    elif payslip.date_to.year == 2029:
        if sbc &gt; (uma * 4.00):
            percentage = 0.10784
        elif sbc &gt; (uma * 3.5):
            percentage = 0.09211
        elif sbc &gt; (uma * 3.0):
            percentage = 0.0877
        elif sbc &gt; (uma * 2.5):
            percentage = 0.08183
        elif sbc &gt; (uma * 2.0):
            percentage = 0.07360
        elif sbc &gt; (uma * 1.5):
            percentage = 0.6126
        elif sbc &gt; minimum_wage:
            percentage = 0.04070
    elif payslip.date_to.year >= 2030:
        if sbc &gt; (uma * 4.00):
            percentage = 0.11875
        elif sbc &gt; (uma * 3.5):
            percentage = 0.10077
        elif sbc &gt; (uma * 3.0):
            percentage = 0.09573
        elif sbc &gt; (uma * 2.5):
            percentage = 0.08902
        elif sbc &gt; (uma * 2.0):
            percentage = 0.07962
        elif sbc &gt; (uma * 1.5):
            percentage = 0.6552
        elif sbc &gt; minimum_wage:
            percentage = 0.04202

    result = percentage * aux
        </field>
    </record>

    <record id="hr_rule_l10n_mx_isn_nomina" model="hr.salary.rule">
        <field name="name">ISN Nómina</field>
        <field name="sequence" eval="1000005" />
        <field name="code">ISN</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="note">
Percepciones multiplicadas por el porcentaje de ISN del estado de la dirección de trabajo y agregado a Company Contribution.

El Fondo de Ahorro Empresa no debe ser considerado en el ISN porque se regresa en una nómina extraordinaria.
        </field>
        <field name="amount_python_compute">
# TODO: Add special ISN rules for CAMPECHE, HIDALGO, SINALOA. Add to christmas bonus, finiquito and liquidacion salary structures too.
use_leave_ded = payslip.contract_id.company_id.l10n_mx_edi_use_leave_deduction
income_period = (categories['PERGRA'] + categories['PEREXE'] - IEG006 - IM006 - IRT006 - LPHC006 - PE005 - (D020 + FJSS if use_leave_ded else 0))
if D054:
    income_period -= PG029 + PE029
result = income_period * employee.get_isn_percentage() if NET > 0 else 0
        </field>
    </record>

    <record id="hr_rule_l10n_mx_isn_university" model="hr.salary.rule">
        <field name="name">Aportación a Universidad Autónoma</field>
        <field name="sequence" eval="1000006" />
        <field name="code">AUA</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">python</field>
        <field name="condition_python">
# Now only supported for Zacatecas
result = employee.address_id.state_id == employee.env.ref('base.state_mx_zac')
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = ISN * 0.10
        </field>
        <field name="note">
Aportación para la Universidad Autónoma del estado si es que aplica
        </field>
    </record>

    <record id="hr_rule_total_company_contributions" model="hr.salary.rule">
        <field name="name">Total Contribuciones Patronales</field>
        <field name="sequence" eval="1000100" />
        <field name="code">TOT_COMP</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories['COMP']</field>
    </record>

    <record id="hr_rule_total_ss" model="hr.salary.rule">
        <field name="name">Total a pagar al IMSS</field>
        <field name="sequence" eval="1000101" />
        <field name="code">TOT_IMSS</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = SS001 + SSComp + RetComp + CesComp
if not employee.l10n_mx_edi_is_assimilated:
    result += InfComp
        </field>
        <field name="note">Seguridad social, couta trabajador más couta patronal</field>
    </record>

    <record id="hr_rule_l10n_mx_provision_aguinaldo" model="hr.salary.rule">
        <field name="name">Provisión Aguinaldo</field>
        <field name="sequence" eval="1001000" />
        <field name="code">PAG</field>
        <field name="category_id" ref="hr_salary_rule_category_provision_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = (payslip.date_to - payslip.date_from).days +1
result = contract.l10n_mx_edi_daily_wage * (contract.l10n_mx_edi_christmas_bonus or 15) / 365 * days
        </field>
        <field name="note">
Provisión de aguinaldo por cada nómina
        </field>
    </record>

    <record id="hr_rule_l10n_mx_provision_vacaciones" model="hr.salary.rule">
        <field name="name">Provisión Vacaciones</field>
        <field name="sequence" eval="1001001" />
        <field name="code">PVA</field>
        <field name="category_id" ref="hr_salary_rule_category_provision_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
days = (payslip.date_to - payslip.date_from).days +1
result = contract.l10n_mx_edi_daily_wage * (contract.l10n_mx_edi_holidays or 6) / 365 * days
        </field>
        <field name="note">
Provisión de vacaciones por cada nómina
        </field>
    </record>

    <record id="hr_rule_l10n_mx_provision_prima_vacacional" model="hr.salary.rule">
        <field name="name">Provisión Prima Vacacional</field>
        <field name="sequence" eval="1001002" />
        <field name="code">PPV</field>
        <field name="category_id" ref="hr_salary_rule_category_provision_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = PVA * contract.l10n_mx_edi_vacation_bonus / 100
        </field>
        <field name="note">
Provisión de prima vacacional por cada nómina
        </field>
    </record>

    <record id="hr_rule_total_provision" model="hr.salary.rule">
        <field name="name">Total Provisiones</field>
        <field name="sequence" eval="1001100" />
        <field name="code">TOT_PROV</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories['PROV']</field>
    </record>

    <record id="hr_rule_total_mx_total" model="hr.salary.rule">
        <field name="name">Nómina Mexico Totales</field>
        <field name="sequence" eval="1002000" />
        <field name="code">NMT</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx" />
        <field name="struct_id" ref="payroll_structure_data_01" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = Percepciones + TOT_COMP + TOT_PROV</field>
    </record>

</odoo>
